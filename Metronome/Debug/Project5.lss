
Project5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001282  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000060  00800060  00001282  00001316  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000008c  008000c0  008000c0  00001376  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001376  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00001410  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001740  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bcd  00000000  00000000  00002cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bf8  00000000  00000000  0000387d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000350  00000000  00000000  00004478  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056f  00000000  00000000  000047c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b7a  00000000  00000000  00004d37  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  000058b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e8       	ldi	r30, 0x82	; 130
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 3c       	cpi	r26, 0xC0	; 192
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	a0 ec       	ldi	r26, 0xC0	; 192
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 34       	cpi	r26, 0x4C	; 76
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 72 01 	call	0x2e4	; 0x2e4 <main>
      8a:	0c 94 3f 09 	jmp	0x127e	; 0x127e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <avr_wait>:
 */

#include "avr.h"

void avr_wait(unsigned short msec)
{
      92:	9c 01       	movw	r18, r24
	TCCR0 = 3;
      94:	83 e0       	ldi	r24, 0x03	; 3
      96:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		//SEED                  CAPACTIY   RATE           TIME
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
      98:	83 e8       	ldi	r24, 0x83	; 131
#include "avr.h"

void avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
      9a:	07 c0       	rjmp	.+14     	; 0xaa <avr_wait+0x18>
		//SEED                  CAPACTIY   RATE           TIME
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
      9c:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
      9e:	98 b7       	in	r25, 0x38	; 56
      a0:	91 60       	ori	r25, 0x01	; 1
      a2:	98 bf       	out	0x38, r25	; 56
		while (!GET_BIT(TIFR, TOV0));
      a4:	08 b6       	in	r0, 0x38	; 56
      a6:	00 fe       	sbrs	r0, 0
      a8:	fd cf       	rjmp	.-6      	; 0xa4 <avr_wait+0x12>
#include "avr.h"

void avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
      aa:	21 50       	subi	r18, 0x01	; 1
      ac:	31 09       	sbc	r19, r1
      ae:	b0 f7       	brcc	.-20     	; 0x9c <avr_wait+0xa>
		//SEED                  CAPACTIY   RATE           TIME
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
		SET_BIT(TIFR, TOV0);
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
      b0:	13 be       	out	0x33, r1	; 51
      b2:	08 95       	ret

000000b4 <note_wait>:
}

void note_wait(unsigned short freq)
{
      b4:	9c 01       	movw	r18, r24
	TCCR0 = 2;
      b6:	82 e0       	ldi	r24, 0x02	; 2
      b8:	83 bf       	out	0x33, r24	; 51
	while (freq--) {
		//SEED                  CAPACTIY   RATE           TIME
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00001);
      ba:	86 ef       	ldi	r24, 0xF6	; 246
}

void note_wait(unsigned short freq)
{
	TCCR0 = 2;
	while (freq--) {
      bc:	07 c0       	rjmp	.+14     	; 0xcc <note_wait+0x18>
		//SEED                  CAPACTIY   RATE           TIME
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00001);
      be:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
      c0:	98 b7       	in	r25, 0x38	; 56
      c2:	91 60       	ori	r25, 0x01	; 1
      c4:	98 bf       	out	0x38, r25	; 56
		while (!GET_BIT(TIFR, TOV0));
      c6:	08 b6       	in	r0, 0x38	; 56
      c8:	00 fe       	sbrs	r0, 0
      ca:	fd cf       	rjmp	.-6      	; 0xc6 <note_wait+0x12>
}

void note_wait(unsigned short freq)
{
	TCCR0 = 2;
	while (freq--) {
      cc:	21 50       	subi	r18, 0x01	; 1
      ce:	31 09       	sbc	r19, r1
      d0:	b0 f7       	brcc	.-20     	; 0xbe <note_wait+0xa>
		//SEED                  CAPACTIY   RATE           TIME
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00001);
		SET_BIT(TIFR, TOV0);
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
      d2:	13 be       	out	0x33, r1	; 51
      d4:	08 95       	ret

000000d6 <isPressed>:
 *
 * Created: 5/2/2020 10:45:46 PM
 *  Author: brand
 */ 
#include "keypad.h"
int isPressed(int r, int c){
      d6:	cf 93       	push	r28
      d8:	df 93       	push	r29
	//set all pins to N/C DDR:0 PORT:0
	int i;
	for(i=0;i<8;i++){
      da:	40 e0       	ldi	r20, 0x00	; 0
      dc:	50 e0       	ldi	r21, 0x00	; 0
		CLR_BIT(DDRC,i);
      de:	e1 e0       	ldi	r30, 0x01	; 1
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	94 b3       	in	r25, 0x14	; 20
      e4:	9f 01       	movw	r18, r30
      e6:	04 2e       	mov	r0, r20
      e8:	02 c0       	rjmp	.+4      	; 0xee <isPressed+0x18>
      ea:	22 0f       	add	r18, r18
      ec:	33 1f       	adc	r19, r19
      ee:	0a 94       	dec	r0
      f0:	e2 f7       	brpl	.-8      	; 0xea <isPressed+0x14>
      f2:	20 95       	com	r18
      f4:	92 23       	and	r25, r18
      f6:	94 bb       	out	0x14, r25	; 20
		CLR_BIT(PORTC,i);
      f8:	95 b3       	in	r25, 0x15	; 21
      fa:	29 23       	and	r18, r25
      fc:	25 bb       	out	0x15, r18	; 21
 */ 
#include "keypad.h"
int isPressed(int r, int c){
	//set all pins to N/C DDR:0 PORT:0
	int i;
	for(i=0;i<8;i++){
      fe:	4f 5f       	subi	r20, 0xFF	; 255
     100:	5f 4f       	sbci	r21, 0xFF	; 255
     102:	48 30       	cpi	r20, 0x08	; 8
     104:	51 05       	cpc	r21, r1
     106:	69 f7       	brne	.-38     	; 0xe2 <isPressed+0xc>
		CLR_BIT(DDRC,i);
		CLR_BIT(PORTC,i);
	}
	//set r to S0 DDR:1 PORT:0
	SET_BIT(DDRC,r);
     108:	24 b3       	in	r18, 0x14	; 20
     10a:	c1 e0       	ldi	r28, 0x01	; 1
     10c:	d0 e0       	ldi	r29, 0x00	; 0
     10e:	ae 01       	movw	r20, r28
     110:	02 c0       	rjmp	.+4      	; 0x116 <isPressed+0x40>
     112:	44 0f       	add	r20, r20
     114:	55 1f       	adc	r21, r21
     116:	8a 95       	dec	r24
     118:	e2 f7       	brpl	.-8      	; 0x112 <isPressed+0x3c>
     11a:	ca 01       	movw	r24, r20
     11c:	92 2f       	mov	r25, r18
     11e:	98 2b       	or	r25, r24
     120:	94 bb       	out	0x14, r25	; 20
	CLR_BIT(PORTC,r);
     122:	95 b3       	in	r25, 0x15	; 21
     124:	80 95       	com	r24
     126:	89 23       	and	r24, r25
     128:	85 bb       	out	0x15, r24	; 21
	//set c to W1 DDR:0 PORT:1
	SET_BIT(PORTC,c+4);
     12a:	85 b3       	in	r24, 0x15	; 21
     12c:	6c 5f       	subi	r22, 0xFC	; 252
     12e:	7f 4f       	sbci	r23, 0xFF	; 255
     130:	02 c0       	rjmp	.+4      	; 0x136 <isPressed+0x60>
     132:	cc 0f       	add	r28, r28
     134:	dd 1f       	adc	r29, r29
     136:	6a 95       	dec	r22
     138:	e2 f7       	brpl	.-8      	; 0x132 <isPressed+0x5c>
     13a:	8c 2b       	or	r24, r28
     13c:	85 bb       	out	0x15, r24	; 21
	//get value at c
	avr_wait(1);
     13e:	81 e0       	ldi	r24, 0x01	; 1
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
	int pressed = GET_BIT(PINC,c+4);
     146:	83 b3       	in	r24, 0x13	; 19
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	c8 23       	and	r28, r24
     14c:	d9 23       	and	r29, r25
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	cd 2b       	or	r28, r29
     154:	11 f0       	breq	.+4      	; 0x15a <isPressed+0x84>
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
	if(pressed==0){
		return 1;
	}
	//not pressed
	return 0;
}
     15a:	df 91       	pop	r29
     15c:	cf 91       	pop	r28
     15e:	08 95       	ret

00000160 <getKey>:

int getKey(){
     160:	0f 93       	push	r16
     162:	1f 93       	push	r17
     164:	cf 93       	push	r28
     166:	df 93       	push	r29
	int r,c;
	for(r=0;r<4;r++){
     168:	00 e0       	ldi	r16, 0x00	; 0
     16a:	10 e0       	ldi	r17, 0x00	; 0
     16c:	18 c0       	rjmp	.+48     	; 0x19e <getKey+0x3e>
		for(c=0;c<4;c++){
			if(isPressed(r,c)){
     16e:	be 01       	movw	r22, r28
     170:	c8 01       	movw	r24, r16
     172:	0e 94 6b 00 	call	0xd6	; 0xd6 <isPressed>
     176:	00 97       	sbiw	r24, 0x00	; 0
     178:	49 f0       	breq	.+18     	; 0x18c <getKey+0x2c>
				return(r*4+c)+1;
     17a:	00 0f       	add	r16, r16
     17c:	11 1f       	adc	r17, r17
     17e:	00 0f       	add	r16, r16
     180:	11 1f       	adc	r17, r17
     182:	c0 0f       	add	r28, r16
     184:	d1 1f       	adc	r29, r17
     186:	ce 01       	movw	r24, r28
     188:	01 96       	adiw	r24, 0x01	; 1
     18a:	0c c0       	rjmp	.+24     	; 0x1a4 <getKey+0x44>
}

int getKey(){
	int r,c;
	for(r=0;r<4;r++){
		for(c=0;c<4;c++){
     18c:	21 96       	adiw	r28, 0x01	; 1
     18e:	c4 30       	cpi	r28, 0x04	; 4
     190:	d1 05       	cpc	r29, r1
     192:	69 f7       	brne	.-38     	; 0x16e <getKey+0xe>
	return 0;
}

int getKey(){
	int r,c;
	for(r=0;r<4;r++){
     194:	0f 5f       	subi	r16, 0xFF	; 255
     196:	1f 4f       	sbci	r17, 0xFF	; 255
     198:	04 30       	cpi	r16, 0x04	; 4
     19a:	11 05       	cpc	r17, r1
     19c:	19 f0       	breq	.+6      	; 0x1a4 <getKey+0x44>
	}
	//not pressed
	return 0;
}

int getKey(){
     19e:	c0 e0       	ldi	r28, 0x00	; 0
     1a0:	d0 e0       	ldi	r29, 0x00	; 0
     1a2:	e5 cf       	rjmp	.-54     	; 0x16e <getKey+0xe>
				return(r*4+c)+1;
			}
		}
	}
	return 0;
}
     1a4:	df 91       	pop	r29
     1a6:	cf 91       	pop	r28
     1a8:	1f 91       	pop	r17
     1aa:	0f 91       	pop	r16
     1ac:	08 95       	ret

000001ae <getInput>:
char getInput(){
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	cd b7       	in	r28, 0x3d	; 61
     1b4:	de b7       	in	r29, 0x3e	; 62
     1b6:	61 97       	sbiw	r28, 0x11	; 17
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	cd bf       	out	0x3d, r28	; 61
	char keyArray[]={'X','1','2','3','A','4','5','6','B','7','8','9','C','*','0','#','D'};
     1c2:	81 e1       	ldi	r24, 0x11	; 17
     1c4:	ee e6       	ldi	r30, 0x6E	; 110
     1c6:	f0 e0       	ldi	r31, 0x00	; 0
     1c8:	de 01       	movw	r26, r28
     1ca:	11 96       	adiw	r26, 0x01	; 1
     1cc:	01 90       	ld	r0, Z+
     1ce:	0d 92       	st	X+, r0
     1d0:	8a 95       	dec	r24
     1d2:	e1 f7       	brne	.-8      	; 0x1cc <getInput+0x1e>
	int key=getKey();
     1d4:	0e 94 b0 00 	call	0x160	; 0x160 <getKey>
	return keyArray[key];
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	2c 0f       	add	r18, r28
     1de:	3d 1f       	adc	r19, r29
     1e0:	82 0f       	add	r24, r18
     1e2:	93 1f       	adc	r25, r19
}
     1e4:	fc 01       	movw	r30, r24
     1e6:	80 81       	ld	r24, Z
     1e8:	61 96       	adiw	r28, 0x11	; 17
     1ea:	0f b6       	in	r0, 0x3f	; 63
     1ec:	f8 94       	cli
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	0f be       	out	0x3f, r0	; 63
     1f2:	cd bf       	out	0x3d, r28	; 61
     1f4:	df 91       	pop	r29
     1f6:	cf 91       	pop	r28
     1f8:	08 95       	ret

000001fa <output>:
}

static void
output(unsigned char d, unsigned char rs)
{
	if (rs) {
     1fa:	66 23       	and	r22, r22
     1fc:	11 f0       	breq	.+4      	; 0x202 <output+0x8>
		SET_BIT(PORT, RS_PIN);
     1fe:	c0 9a       	sbi	0x18, 0	; 24
     200:	01 c0       	rjmp	.+2      	; 0x204 <output+0xa>
	}
	else {
		CLR_BIT(PORT, RS_PIN);
     202:	c0 98       	cbi	0x18, 0	; 24
	}
	CLR_BIT(PORT, RW_PIN);
     204:	c1 98       	cbi	0x18, 1	; 24
#define EN_PIN 2

static void
set_data(unsigned char x)
{
	PORTD = x;
     206:	82 bb       	out	0x12, r24	; 18
	DDRD = 0xff;
     208:	8f ef       	ldi	r24, 0xFF	; 255
     20a:	81 bb       	out	0x11, r24	; 17
	else {
		CLR_BIT(PORT, RS_PIN);
	}
	CLR_BIT(PORT, RW_PIN);
	set_data(d);
	SET_BIT(PORT, EN_PIN);
     20c:	c2 9a       	sbi	0x18, 2	; 24
}

static void
sleep_700ns(void)
{
	NOP();
     20e:	00 00       	nop
	NOP();
     210:	00 00       	nop
	NOP();
     212:	00 00       	nop
	}
	CLR_BIT(PORT, RW_PIN);
	set_data(d);
	SET_BIT(PORT, EN_PIN);
	sleep_700ns();
	CLR_BIT(PORT, EN_PIN);
     214:	c2 98       	cbi	0x18, 2	; 24
     216:	08 95       	ret

00000218 <write>:

	if (rs) {
		SET_BIT(PORT, RS_PIN);
	}
	else {
		CLR_BIT(PORT, RS_PIN);
     218:	c0 98       	cbi	0x18, 0	; 24
	}
	SET_BIT(PORT, RW_PIN);
     21a:	c1 9a       	sbi	0x18, 1	; 24
}

static unsigned char
get_data(void)
{
	DDRD = 0x00;
     21c:	11 ba       	out	0x11, r1	; 17
	return PIND;
     21e:	90 b3       	in	r25, 0x10	; 16
	else {
		CLR_BIT(PORT, RS_PIN);
	}
	SET_BIT(PORT, RW_PIN);
	get_data();
	SET_BIT(PORT, EN_PIN);
     220:	c2 9a       	sbi	0x18, 2	; 24
}

static void
sleep_700ns(void)
{
	NOP();
     222:	00 00       	nop
	NOP();
     224:	00 00       	nop
	NOP();
     226:	00 00       	nop
}

static unsigned char
get_data(void)
{
	DDRD = 0x00;
     228:	11 ba       	out	0x11, r1	; 17
	return PIND;
     22a:	90 b3       	in	r25, 0x10	; 16
	SET_BIT(PORT, RW_PIN);
	get_data();
	SET_BIT(PORT, EN_PIN);
	sleep_700ns();
	d = get_data();
	CLR_BIT(PORT, EN_PIN);
     22c:	c2 98       	cbi	0x18, 2	; 24
}

static void
write(unsigned char c, unsigned char rs)
{
	while (input(0) & 0x80);
     22e:	99 23       	and	r25, r25
     230:	9c f3       	brlt	.-26     	; 0x218 <write>
	output(c, rs);
     232:	0e 94 fd 00 	call	0x1fa	; 0x1fa <output>
     236:	08 95       	ret

00000238 <lcd_init>:
}

void
lcd_init(void)
{
	SET_BIT(DDR, RS_PIN);
     238:	b8 9a       	sbi	0x17, 0	; 23
	SET_BIT(DDR, RW_PIN);
     23a:	b9 9a       	sbi	0x17, 1	; 23
	SET_BIT(DDR, EN_PIN);
     23c:	ba 9a       	sbi	0x17, 2	; 23
	avr_wait(16);
     23e:	80 e1       	ldi	r24, 0x10	; 16
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
	output(0x30, 0);
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	80 e3       	ldi	r24, 0x30	; 48
     24a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <output>
	avr_wait(5);
     24e:	85 e0       	ldi	r24, 0x05	; 5
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
	output(0x30, 0);
     256:	60 e0       	ldi	r22, 0x00	; 0
     258:	80 e3       	ldi	r24, 0x30	; 48
     25a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <output>
	avr_wait(1);
     25e:	81 e0       	ldi	r24, 0x01	; 1
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
	write(0x3c, 0);
     266:	60 e0       	ldi	r22, 0x00	; 0
     268:	8c e3       	ldi	r24, 0x3C	; 60
     26a:	0e 94 0c 01 	call	0x218	; 0x218 <write>
	write(0x0c, 0);
     26e:	60 e0       	ldi	r22, 0x00	; 0
     270:	8c e0       	ldi	r24, 0x0C	; 12
     272:	0e 94 0c 01 	call	0x218	; 0x218 <write>
	write(0x06, 0);
     276:	60 e0       	ldi	r22, 0x00	; 0
     278:	86 e0       	ldi	r24, 0x06	; 6
     27a:	0e 94 0c 01 	call	0x218	; 0x218 <write>
	write(0x01, 0);
     27e:	60 e0       	ldi	r22, 0x00	; 0
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	0e 94 0c 01 	call	0x218	; 0x218 <write>
     286:	08 95       	ret

00000288 <lcd_clr>:
}

void
lcd_clr(void)
{
	write(0x01, 0);
     288:	60 e0       	ldi	r22, 0x00	; 0
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	0e 94 0c 01 	call	0x218	; 0x218 <write>
     290:	08 95       	ret

00000292 <lcd_pos>:
}

void
lcd_pos(unsigned char r, unsigned char c)
{
     292:	cf 93       	push	r28
	unsigned char n = r * 40 + c;
     294:	c6 2f       	mov	r28, r22
     296:	98 e2       	ldi	r25, 0x28	; 40
     298:	89 9f       	mul	r24, r25
     29a:	c0 0d       	add	r28, r0
     29c:	11 24       	eor	r1, r1

	write(0x02, 0);
     29e:	60 e0       	ldi	r22, 0x00	; 0
     2a0:	82 e0       	ldi	r24, 0x02	; 2
     2a2:	0e 94 0c 01 	call	0x218	; 0x218 <write>
	while (n--) {
     2a6:	cc 23       	and	r28, r28
     2a8:	31 f0       	breq	.+12     	; 0x2b6 <lcd_pos+0x24>
		write(0x14, 0);
     2aa:	60 e0       	ldi	r22, 0x00	; 0
     2ac:	84 e1       	ldi	r24, 0x14	; 20
     2ae:	0e 94 0c 01 	call	0x218	; 0x218 <write>
     2b2:	c1 50       	subi	r28, 0x01	; 1
lcd_pos(unsigned char r, unsigned char c)
{
	unsigned char n = r * 40 + c;

	write(0x02, 0);
	while (n--) {
     2b4:	d1 f7       	brne	.-12     	; 0x2aa <lcd_pos+0x18>
		write(0x14, 0);
	}
}
     2b6:	cf 91       	pop	r28
     2b8:	08 95       	ret

000002ba <lcd_put>:

void
lcd_put(char c)
{
	write(c, 1);
     2ba:	61 e0       	ldi	r22, 0x01	; 1
     2bc:	0e 94 0c 01 	call	0x218	; 0x218 <write>
     2c0:	08 95       	ret

000002c2 <lcd_puts>:
}

void
lcd_puts(const char *s)
{
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
	char c;
	while ((c = *(s++)) != 0) {
     2c6:	ec 01       	movw	r28, r24
     2c8:	21 96       	adiw	r28, 0x01	; 1
     2ca:	fc 01       	movw	r30, r24
     2cc:	80 81       	ld	r24, Z
     2ce:	88 23       	and	r24, r24
     2d0:	31 f0       	breq	.+12     	; 0x2de <lcd_puts+0x1c>
		write(c, 1);
     2d2:	61 e0       	ldi	r22, 0x01	; 1
     2d4:	0e 94 0c 01 	call	0x218	; 0x218 <write>

void
lcd_puts(const char *s)
{
	char c;
	while ((c = *(s++)) != 0) {
     2d8:	89 91       	ld	r24, Y+
     2da:	81 11       	cpse	r24, r1
     2dc:	fa cf       	rjmp	.-12     	; 0x2d2 <lcd_puts+0x10>
		write(c, 1);
	}
     2de:	df 91       	pop	r29
     2e0:	cf 91       	pop	r28
     2e2:	08 95       	ret

000002e4 <main>:
 */ 


#include "metronome.h"
int main(void)
{
     2e4:	cf 93       	push	r28
     2e6:	df 93       	push	r29
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	61 97       	sbiw	r28, 0x11	; 17
     2ee:	0f b6       	in	r0, 0x3f	; 63
     2f0:	f8 94       	cli
     2f2:	de bf       	out	0x3e, r29	; 62
     2f4:	0f be       	out	0x3f, r0	; 63
     2f6:	cd bf       	out	0x3d, r28	; 61
	
	init_metronome();
     2f8:	0e 94 ae 01 	call	0x35c	; 0x35c <init_metronome>
	
		lcd_pos(0,0);
     2fc:	60 e0       	ldi	r22, 0x00	; 0
     2fe:	80 e0       	ldi	r24, 0x00	; 0
     300:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
		char buffer[17];
		sprintf(buffer,"bpm:%d",currentMetronome.bpm);
     304:	e0 e6       	ldi	r30, 0x60	; 96
     306:	f0 e0       	ldi	r31, 0x00	; 0
     308:	81 81       	ldd	r24, Z+1	; 0x01
     30a:	8f 93       	push	r24
     30c:	80 81       	ld	r24, Z
     30e:	8f 93       	push	r24
     310:	8f e7       	ldi	r24, 0x7F	; 127
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	9f 93       	push	r25
     316:	8f 93       	push	r24
     318:	ce 01       	movw	r24, r28
     31a:	01 96       	adiw	r24, 0x01	; 1
     31c:	9f 93       	push	r25
     31e:	8f 93       	push	r24
     320:	0e 94 55 06 	call	0xcaa	; 0xcaa <sprintf>
		lcd_puts("");
     324:	8f eb       	ldi	r24, 0xBF	; 191
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
		avr_wait(1000);
     32c:	88 ee       	ldi	r24, 0xE8	; 232
     32e:	93 e0       	ldi	r25, 0x03	; 3
     330:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
     334:	0f 90       	pop	r0
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
    while (1) 
    {
		
		checkInput();
		playBeat();
		avr_wait(currentMetronome.waitTime);	
     340:	00 e6       	ldi	r16, 0x60	; 96
     342:	10 e0       	ldi	r17, 0x00	; 0
		lcd_puts("");
		avr_wait(1000);
    while (1) 
    {
		
		checkInput();
     344:	0e 94 b5 03 	call	0x76a	; 0x76a <checkInput>
		playBeat();
     348:	0e 94 a9 02 	call	0x552	; 0x552 <playBeat>
		avr_wait(currentMetronome.waitTime);	
     34c:	f8 01       	movw	r30, r16
     34e:	86 81       	ldd	r24, Z+6	; 0x06
     350:	97 81       	ldd	r25, Z+7	; 0x07
     352:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
		lcd_clr();
     356:	0e 94 44 01 	call	0x288	; 0x288 <lcd_clr>
     35a:	f4 cf       	rjmp	.-24     	; 0x344 <main+0x60>

0000035c <init_metronome>:
	else if(input=='C'){
		updatePresets();
	}
}

void updatePresets(){
     35c:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_init>
     360:	d0 9a       	sbi	0x1a, 0	; 26
     362:	d1 9a       	sbi	0x1a, 1	; 26
     364:	d2 9a       	sbi	0x1a, 2	; 26
     366:	d3 9a       	sbi	0x1a, 3	; 26
     368:	bb 9a       	sbi	0x17, 3	; 23
     36a:	8e e0       	ldi	r24, 0x0E	; 14
     36c:	e0 e6       	ldi	r30, 0x60	; 96
     36e:	f0 e0       	ldi	r31, 0x00	; 0
     370:	a0 ec       	ldi	r26, 0xC0	; 192
     372:	b0 e0       	ldi	r27, 0x00	; 0
     374:	01 90       	ld	r0, Z+
     376:	0d 92       	st	X+, r0
     378:	8a 95       	dec	r24
     37a:	e1 f7       	brne	.-8      	; 0x374 <init_metronome+0x18>
     37c:	08 95       	ret

0000037e <updateBPM>:
     37e:	cf 92       	push	r12
     380:	df 92       	push	r13
     382:	ef 92       	push	r14
     384:	ff 92       	push	r15
     386:	0f 93       	push	r16
     388:	1f 93       	push	r17
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	cd b7       	in	r28, 0x3d	; 61
     390:	de b7       	in	r29, 0x3e	; 62
     392:	61 97       	sbiw	r28, 0x11	; 17
     394:	0f b6       	in	r0, 0x3f	; 63
     396:	f8 94       	cli
     398:	de bf       	out	0x3e, r29	; 62
     39a:	0f be       	out	0x3f, r0	; 63
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	0e 94 44 01 	call	0x288	; 0x288 <lcd_clr>
     3a2:	60 e0       	ldi	r22, 0x00	; 0
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
     3aa:	e0 e6       	ldi	r30, 0x60	; 96
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	81 81       	ldd	r24, Z+1	; 0x01
     3b0:	8f 93       	push	r24
     3b2:	80 81       	ld	r24, Z
     3b4:	8f 93       	push	r24
     3b6:	86 e8       	ldi	r24, 0x86	; 134
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	9f 93       	push	r25
     3bc:	8f 93       	push	r24
     3be:	8e 01       	movw	r16, r28
     3c0:	0f 5f       	subi	r16, 0xFF	; 255
     3c2:	1f 4f       	sbci	r17, 0xFF	; 255
     3c4:	1f 93       	push	r17
     3c6:	0f 93       	push	r16
     3c8:	0e 94 55 06 	call	0xcaa	; 0xcaa <sprintf>
     3cc:	c8 01       	movw	r24, r16
     3ce:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
     3d2:	60 e0       	ldi	r22, 0x00	; 0
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
     3da:	84 e1       	ldi	r24, 0x14	; 20
     3dc:	e2 e9       	ldi	r30, 0x92	; 146
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	d8 01       	movw	r26, r16
     3e2:	01 90       	ld	r0, Z+
     3e4:	0d 92       	st	X+, r0
     3e6:	8a 95       	dec	r24
     3e8:	e1 f7       	brne	.-8      	; 0x3e2 <updateBPM+0x64>
     3ea:	c8 01       	movw	r24, r16
     3ec:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
     3f0:	0f 90       	pop	r0
     3f2:	0f 90       	pop	r0
     3f4:	0f 90       	pop	r0
     3f6:	0f 90       	pop	r0
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	00 e6       	ldi	r16, 0x60	; 96
     3fe:	10 e0       	ldi	r17, 0x00	; 0
     400:	0f 2e       	mov	r0, r31
     402:	f6 e8       	ldi	r31, 0x86	; 134
     404:	cf 2e       	mov	r12, r31
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	df 2e       	mov	r13, r31
     40a:	f0 2d       	mov	r31, r0
     40c:	ce 01       	movw	r24, r28
     40e:	01 96       	adiw	r24, 0x01	; 1
     410:	7c 01       	movw	r14, r24
     412:	0e 94 d7 00 	call	0x1ae	; 0x1ae <getInput>
     416:	81 34       	cpi	r24, 0x41	; 65
     418:	19 f5       	brne	.+70     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     41a:	f8 01       	movw	r30, r16
     41c:	80 81       	ld	r24, Z
     41e:	91 81       	ldd	r25, Z+1	; 0x01
     420:	05 96       	adiw	r24, 0x05	; 5
     422:	91 83       	std	Z+1, r25	; 0x01
     424:	80 83       	st	Z, r24
     426:	60 e0       	ldi	r22, 0x00	; 0
     428:	80 e0       	ldi	r24, 0x00	; 0
     42a:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
     42e:	f8 01       	movw	r30, r16
     430:	81 81       	ldd	r24, Z+1	; 0x01
     432:	8f 93       	push	r24
     434:	80 81       	ld	r24, Z
     436:	8f 93       	push	r24
     438:	df 92       	push	r13
     43a:	cf 92       	push	r12
     43c:	ff 92       	push	r15
     43e:	ef 92       	push	r14
     440:	0e 94 55 06 	call	0xcaa	; 0xcaa <sprintf>
     444:	c7 01       	movw	r24, r14
     446:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
     44a:	88 ec       	ldi	r24, 0xC8	; 200
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
     452:	0f 90       	pop	r0
     454:	0f 90       	pop	r0
     456:	0f 90       	pop	r0
     458:	0f 90       	pop	r0
     45a:	0f 90       	pop	r0
     45c:	0f 90       	pop	r0
     45e:	d9 cf       	rjmp	.-78     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     460:	82 34       	cpi	r24, 0x42	; 66
     462:	19 f5       	brne	.+70     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     464:	f8 01       	movw	r30, r16
     466:	80 81       	ld	r24, Z
     468:	91 81       	ldd	r25, Z+1	; 0x01
     46a:	05 97       	sbiw	r24, 0x05	; 5
     46c:	91 83       	std	Z+1, r25	; 0x01
     46e:	80 83       	st	Z, r24
     470:	60 e0       	ldi	r22, 0x00	; 0
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
     478:	f8 01       	movw	r30, r16
     47a:	81 81       	ldd	r24, Z+1	; 0x01
     47c:	8f 93       	push	r24
     47e:	80 81       	ld	r24, Z
     480:	8f 93       	push	r24
     482:	df 92       	push	r13
     484:	cf 92       	push	r12
     486:	ff 92       	push	r15
     488:	ef 92       	push	r14
     48a:	0e 94 55 06 	call	0xcaa	; 0xcaa <sprintf>
     48e:	c7 01       	movw	r24, r14
     490:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
     494:	88 ec       	ldi	r24, 0xC8	; 200
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
     49c:	0f 90       	pop	r0
     49e:	0f 90       	pop	r0
     4a0:	0f 90       	pop	r0
     4a2:	0f 90       	pop	r0
     4a4:	0f 90       	pop	r0
     4a6:	0f 90       	pop	r0
     4a8:	b4 cf       	rjmp	.-152    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     4aa:	84 34       	cpi	r24, 0x44	; 68
     4ac:	09 f0       	breq	.+2      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     4ae:	b1 cf       	rjmp	.-158    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     4b0:	88 ec       	ldi	r24, 0xC8	; 200
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
     4b8:	00 e6       	ldi	r16, 0x60	; 96
     4ba:	10 e0       	ldi	r17, 0x00	; 0
     4bc:	f8 01       	movw	r30, r16
     4be:	20 81       	ld	r18, Z
     4c0:	31 81       	ldd	r19, Z+1	; 0x01
     4c2:	03 2e       	mov	r0, r19
     4c4:	00 0c       	add	r0, r0
     4c6:	44 0b       	sbc	r20, r20
     4c8:	55 0b       	sbc	r21, r21
     4ca:	60 e6       	ldi	r22, 0x60	; 96
     4cc:	7a ee       	ldi	r23, 0xEA	; 234
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	0e 94 14 06 	call	0xc28	; 0xc28 <__divmodsi4>
     4d6:	22 53       	subi	r18, 0x32	; 50
     4d8:	31 09       	sbc	r19, r1
     4da:	f8 01       	movw	r30, r16
     4dc:	37 83       	std	Z+7, r19	; 0x07
     4de:	26 83       	std	Z+6, r18	; 0x06
     4e0:	0e 94 44 01 	call	0x288	; 0x288 <lcd_clr>
     4e4:	61 96       	adiw	r28, 0x11	; 17
     4e6:	0f b6       	in	r0, 0x3f	; 63
     4e8:	f8 94       	cli
     4ea:	de bf       	out	0x3e, r29	; 62
     4ec:	0f be       	out	0x3f, r0	; 63
     4ee:	cd bf       	out	0x3d, r28	; 61
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	1f 91       	pop	r17
     4f6:	0f 91       	pop	r16
     4f8:	ff 90       	pop	r15
     4fa:	ef 90       	pop	r14
     4fc:	df 90       	pop	r13
     4fe:	cf 90       	pop	r12
     500:	08 95       	ret

00000502 <displayBeatLCD>:
     502:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_start+0xa>
     506:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_start+0xb>
     50a:	89 2b       	or	r24, r25
     50c:	49 f0       	breq	.+18     	; 0x520 <displayBeatLCD+0x1e>
     50e:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__data_start+0x4>
     512:	80 e0       	ldi	r24, 0x00	; 0
     514:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
     518:	80 eb       	ldi	r24, 0xB0	; 176
     51a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_put>
     51e:	08 95       	ret
     520:	60 e0       	ldi	r22, 0x00	; 0
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
     528:	8f eb       	ldi	r24, 0xBF	; 191
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
     530:	08 95       	ret

00000532 <updateMetronome>:
     532:	e0 e6       	ldi	r30, 0x60	; 96
     534:	f0 e0       	ldi	r31, 0x00	; 0
     536:	84 81       	ldd	r24, Z+4	; 0x04
     538:	95 81       	ldd	r25, Z+5	; 0x05
     53a:	01 96       	adiw	r24, 0x01	; 1
     53c:	83 70       	andi	r24, 0x03	; 3
     53e:	90 78       	andi	r25, 0x80	; 128
     540:	99 23       	and	r25, r25
     542:	24 f4       	brge	.+8      	; 0x54c <updateMetronome+0x1a>
     544:	01 97       	sbiw	r24, 0x01	; 1
     546:	8c 6f       	ori	r24, 0xFC	; 252
     548:	9f 6f       	ori	r25, 0xFF	; 255
     54a:	01 96       	adiw	r24, 0x01	; 1
     54c:	95 83       	std	Z+5, r25	; 0x05
     54e:	84 83       	std	Z+4, r24	; 0x04
     550:	08 95       	ret

00000552 <playBeat>:
     552:	0f 93       	push	r16
     554:	1f 93       	push	r17
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	0e 94 81 02 	call	0x502	; 0x502 <displayBeatLCD>
     55e:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
     562:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <__data_start+0x9>
     566:	89 2b       	or	r24, r25
     568:	19 f1       	breq	.+70     	; 0x5b0 <playBeat+0x5e>
     56a:	2b b3       	in	r18, 0x1b	; 27
     56c:	00 e6       	ldi	r16, 0x60	; 96
     56e:	10 e0       	ldi	r17, 0x00	; 0
     570:	c1 e0       	ldi	r28, 0x01	; 1
     572:	d0 e0       	ldi	r29, 0x00	; 0
     574:	ce 01       	movw	r24, r28
     576:	f8 01       	movw	r30, r16
     578:	04 80       	ldd	r0, Z+4	; 0x04
     57a:	02 c0       	rjmp	.+4      	; 0x580 <playBeat+0x2e>
     57c:	88 0f       	add	r24, r24
     57e:	99 1f       	adc	r25, r25
     580:	0a 94       	dec	r0
     582:	e2 f7       	brpl	.-8      	; 0x57c <playBeat+0x2a>
     584:	82 2b       	or	r24, r18
     586:	8b bb       	out	0x1b, r24	; 27
     588:	40 e0       	ldi	r20, 0x00	; 0
     58a:	50 e0       	ldi	r21, 0x00	; 0
     58c:	60 e8       	ldi	r22, 0x80	; 128
     58e:	7e e3       	ldi	r23, 0x3E	; 62
     590:	82 e7       	ldi	r24, 0x72	; 114
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	0e 94 c1 03 	call	0x782	; 0x782 <playNote>
     598:	8b b3       	in	r24, 0x1b	; 27
     59a:	f8 01       	movw	r30, r16
     59c:	04 80       	ldd	r0, Z+4	; 0x04
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <playBeat+0x52>
     5a0:	cc 0f       	add	r28, r28
     5a2:	dd 1f       	adc	r29, r29
     5a4:	0a 94       	dec	r0
     5a6:	e2 f7       	brpl	.-8      	; 0x5a0 <playBeat+0x4e>
     5a8:	c0 95       	com	r28
     5aa:	c8 23       	and	r28, r24
     5ac:	cb bb       	out	0x1b, r28	; 27
     5ae:	08 c0       	rjmp	.+16     	; 0x5c0 <playBeat+0x6e>
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	50 e0       	ldi	r21, 0x00	; 0
     5b4:	60 e8       	ldi	r22, 0x80	; 128
     5b6:	7e e3       	ldi	r23, 0x3E	; 62
     5b8:	82 e7       	ldi	r24, 0x72	; 114
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	0e 94 c1 03 	call	0x782	; 0x782 <playNote>
     5c0:	0e 94 99 02 	call	0x532	; 0x532 <updateMetronome>
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	0f 91       	pop	r16
     5cc:	08 95       	ret

000005ce <updateSettings>:
	
}

void updateSettings(){
     5ce:	8f 92       	push	r8
     5d0:	9f 92       	push	r9
     5d2:	af 92       	push	r10
     5d4:	bf 92       	push	r11
     5d6:	cf 92       	push	r12
     5d8:	df 92       	push	r13
     5da:	ef 92       	push	r14
     5dc:	ff 92       	push	r15
     5de:	0f 93       	push	r16
     5e0:	1f 93       	push	r17
     5e2:	cf 93       	push	r28
     5e4:	df 93       	push	r29
     5e6:	cd b7       	in	r28, 0x3d	; 61
     5e8:	de b7       	in	r29, 0x3e	; 62
     5ea:	61 97       	sbiw	r28, 0x11	; 17
     5ec:	0f b6       	in	r0, 0x3f	; 63
     5ee:	f8 94       	cli
     5f0:	de bf       	out	0x3e, r29	; 62
     5f2:	0f be       	out	0x3f, r0	; 63
     5f4:	cd bf       	out	0x3d, r28	; 61
	lcd_clr();
     5f6:	0e 94 44 01 	call	0x288	; 0x288 <lcd_clr>
	lcd_pos(0,0);
     5fa:	60 e0       	ldi	r22, 0x00	; 0
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
	char buffer[17];
	sprintf(buffer,"LCD:%d LED:%d",currentMetronome.displayLCD,currentMetronome.displayLED);
     602:	e0 e6       	ldi	r30, 0x60	; 96
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	81 85       	ldd	r24, Z+9	; 0x09
     608:	8f 93       	push	r24
     60a:	80 85       	ldd	r24, Z+8	; 0x08
     60c:	8f 93       	push	r24
     60e:	83 85       	ldd	r24, Z+11	; 0x0b
     610:	8f 93       	push	r24
     612:	82 85       	ldd	r24, Z+10	; 0x0a
     614:	8f 93       	push	r24
     616:	86 ea       	ldi	r24, 0xA6	; 166
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	9f 93       	push	r25
     61c:	8f 93       	push	r24
     61e:	8e 01       	movw	r16, r28
     620:	0f 5f       	subi	r16, 0xFF	; 255
     622:	1f 4f       	sbci	r17, 0xFF	; 255
     624:	1f 93       	push	r17
     626:	0f 93       	push	r16
     628:	0e 94 55 06 	call	0xcaa	; 0xcaa <sprintf>
	lcd_puts(buffer);
     62c:	c8 01       	movw	r24, r16
     62e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	
	lcd_pos(1,0);
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
	sprintf(buffer,"A:LCD B:LED");
     63a:	8c e0       	ldi	r24, 0x0C	; 12
     63c:	e4 eb       	ldi	r30, 0xB4	; 180
     63e:	f0 e0       	ldi	r31, 0x00	; 0
     640:	d8 01       	movw	r26, r16
     642:	01 90       	ld	r0, Z+
     644:	0d 92       	st	X+, r0
     646:	8a 95       	dec	r24
     648:	e1 f7       	brne	.-8      	; 0x642 <updateSettings+0x74>
	lcd_puts(buffer);
     64a:	c8 01       	movw	r24, r16
     64c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
     650:	0f b6       	in	r0, 0x3f	; 63
     652:	f8 94       	cli
     654:	de bf       	out	0x3e, r29	; 62
     656:	0f be       	out	0x3f, r0	; 63
     658:	cd bf       	out	0x3d, r28	; 61
			lcd_puts(buffer);
			
			avr_wait(200);
		}
		else if(input=='B'){
			currentMetronome.displayLED=!currentMetronome.displayLED;
     65a:	00 e6       	ldi	r16, 0x60	; 96
     65c:	10 e0       	ldi	r17, 0x00	; 0
     65e:	aa 24       	eor	r10, r10
     660:	a3 94       	inc	r10
     662:	b1 2c       	mov	r11, r1
			lcd_pos(0,0);
			sprintf(buffer,"LCD:%d LED:%d",currentMetronome.displayLCD,currentMetronome.displayLED);
     664:	0f 2e       	mov	r0, r31
     666:	f6 ea       	ldi	r31, 0xA6	; 166
     668:	cf 2e       	mov	r12, r31
     66a:	f0 e0       	ldi	r31, 0x00	; 0
     66c:	df 2e       	mov	r13, r31
     66e:	f0 2d       	mov	r31, r0
     670:	fe 01       	movw	r30, r28
     672:	31 96       	adiw	r30, 0x01	; 1
     674:	7f 01       	movw	r14, r30
			lcd_puts(buffer);
			
			avr_wait(200);
		}
		else if(input=='B'){
			currentMetronome.displayLED=!currentMetronome.displayLED;
     676:	81 2c       	mov	r8, r1
     678:	91 2c       	mov	r9, r1
	sprintf(buffer,"A:LCD B:LED");
	lcd_puts(buffer);
	
	char input;	
	while(1){
		input=getInput();
     67a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <getInput>
		if(input=='A'){
     67e:	81 34       	cpi	r24, 0x41	; 65
     680:	61 f5       	brne	.+88     	; 0x6da <updateSettings+0x10c>
			currentMetronome.displayLCD=!currentMetronome.displayLCD;
     682:	9a 2d       	mov	r25, r10
     684:	8b 2d       	mov	r24, r11
     686:	f8 01       	movw	r30, r16
     688:	22 85       	ldd	r18, Z+10	; 0x0a
     68a:	33 85       	ldd	r19, Z+11	; 0x0b
     68c:	23 2b       	or	r18, r19
     68e:	11 f0       	breq	.+4      	; 0x694 <updateSettings+0xc6>
     690:	98 2d       	mov	r25, r8
     692:	89 2d       	mov	r24, r9
     694:	f8 01       	movw	r30, r16
     696:	92 87       	std	Z+10, r25	; 0x0a
     698:	83 87       	std	Z+11, r24	; 0x0b
			lcd_pos(0,0);
     69a:	60 e0       	ldi	r22, 0x00	; 0
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
			sprintf(buffer,"LCD:%d LED:%d",currentMetronome.displayLCD,currentMetronome.displayLED);
     6a2:	f8 01       	movw	r30, r16
     6a4:	81 85       	ldd	r24, Z+9	; 0x09
     6a6:	8f 93       	push	r24
     6a8:	80 85       	ldd	r24, Z+8	; 0x08
     6aa:	8f 93       	push	r24
     6ac:	83 85       	ldd	r24, Z+11	; 0x0b
     6ae:	8f 93       	push	r24
     6b0:	82 85       	ldd	r24, Z+10	; 0x0a
     6b2:	8f 93       	push	r24
     6b4:	df 92       	push	r13
     6b6:	cf 92       	push	r12
     6b8:	ff 92       	push	r15
     6ba:	ef 92       	push	r14
     6bc:	0e 94 55 06 	call	0xcaa	; 0xcaa <sprintf>
			lcd_puts(buffer);
     6c0:	c7 01       	movw	r24, r14
     6c2:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
			
			avr_wait(200);
     6c6:	88 ec       	ldi	r24, 0xC8	; 200
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
     6ce:	0f b6       	in	r0, 0x3f	; 63
     6d0:	f8 94       	cli
     6d2:	de bf       	out	0x3e, r29	; 62
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	cd bf       	out	0x3d, r28	; 61
     6d8:	d0 cf       	rjmp	.-96     	; 0x67a <updateSettings+0xac>
		}
		else if(input=='B'){
     6da:	82 34       	cpi	r24, 0x42	; 66
     6dc:	61 f5       	brne	.+88     	; 0x736 <updateSettings+0x168>
			currentMetronome.displayLED=!currentMetronome.displayLED;
     6de:	9a 2d       	mov	r25, r10
     6e0:	8b 2d       	mov	r24, r11
     6e2:	f8 01       	movw	r30, r16
     6e4:	20 85       	ldd	r18, Z+8	; 0x08
     6e6:	31 85       	ldd	r19, Z+9	; 0x09
     6e8:	23 2b       	or	r18, r19
     6ea:	11 f0       	breq	.+4      	; 0x6f0 <updateSettings+0x122>
     6ec:	98 2d       	mov	r25, r8
     6ee:	89 2d       	mov	r24, r9
     6f0:	f8 01       	movw	r30, r16
     6f2:	90 87       	std	Z+8, r25	; 0x08
     6f4:	81 87       	std	Z+9, r24	; 0x09
			lcd_pos(0,0);
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>
			sprintf(buffer,"LCD:%d LED:%d",currentMetronome.displayLCD,currentMetronome.displayLED);
     6fe:	f8 01       	movw	r30, r16
     700:	81 85       	ldd	r24, Z+9	; 0x09
     702:	8f 93       	push	r24
     704:	80 85       	ldd	r24, Z+8	; 0x08
     706:	8f 93       	push	r24
     708:	83 85       	ldd	r24, Z+11	; 0x0b
     70a:	8f 93       	push	r24
     70c:	82 85       	ldd	r24, Z+10	; 0x0a
     70e:	8f 93       	push	r24
     710:	df 92       	push	r13
     712:	cf 92       	push	r12
     714:	ff 92       	push	r15
     716:	ef 92       	push	r14
     718:	0e 94 55 06 	call	0xcaa	; 0xcaa <sprintf>
			lcd_puts(buffer);
     71c:	c7 01       	movw	r24, r14
     71e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
			avr_wait(200);			
     722:	88 ec       	ldi	r24, 0xC8	; 200
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
     72a:	0f b6       	in	r0, 0x3f	; 63
     72c:	f8 94       	cli
     72e:	de bf       	out	0x3e, r29	; 62
     730:	0f be       	out	0x3f, r0	; 63
     732:	cd bf       	out	0x3d, r28	; 61
     734:	a2 cf       	rjmp	.-188    	; 0x67a <updateSettings+0xac>
		}
		else if(input=='D'){
     736:	84 34       	cpi	r24, 0x44	; 68
     738:	09 f0       	breq	.+2      	; 0x73c <updateSettings+0x16e>
     73a:	9f cf       	rjmp	.-194    	; 0x67a <updateSettings+0xac>
			avr_wait(200);
     73c:	88 ec       	ldi	r24, 0xC8	; 200
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
			break;
		}
	}
     744:	61 96       	adiw	r28, 0x11	; 17
     746:	0f b6       	in	r0, 0x3f	; 63
     748:	f8 94       	cli
     74a:	de bf       	out	0x3e, r29	; 62
     74c:	0f be       	out	0x3f, r0	; 63
     74e:	cd bf       	out	0x3d, r28	; 61
     750:	df 91       	pop	r29
     752:	cf 91       	pop	r28
     754:	1f 91       	pop	r17
     756:	0f 91       	pop	r16
     758:	ff 90       	pop	r15
     75a:	ef 90       	pop	r14
     75c:	df 90       	pop	r13
     75e:	cf 90       	pop	r12
     760:	bf 90       	pop	r11
     762:	af 90       	pop	r10
     764:	9f 90       	pop	r9
     766:	8f 90       	pop	r8
     768:	08 95       	ret

0000076a <checkInput>:
	currentMetronome.currBeat++;
	currentMetronome.currBeat=currentMetronome.currBeat%4;	
}

void checkInput(){
	char input=getInput();
     76a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <getInput>
	//update BPM
	if(input=='*'){
     76e:	8a 32       	cpi	r24, 0x2A	; 42
     770:	19 f4       	brne	.+6      	; 0x778 <checkInput+0xe>
		updateBPM();
     772:	0e 94 bf 01 	call	0x37e	; 0x37e <updateBPM>
     776:	08 95       	ret
	}
	//setting to turn on/off certain aspects of metronome
	else if(input=='#'){
     778:	83 32       	cpi	r24, 0x23	; 35
     77a:	11 f4       	brne	.+4      	; 0x780 <checkInput+0x16>
		updateSettings();
     77c:	0e 94 e7 02 	call	0x5ce	; 0x5ce <updateSettings>
     780:	08 95       	ret

00000782 <playNote>:
#include "note.h"


int tempo=2;
int pitch=2;
void playNote(int freq, double duration){
     782:	cf 92       	push	r12
     784:	df 92       	push	r13
     786:	ef 92       	push	r14
     788:	ff 92       	push	r15
     78a:	0f 93       	push	r16
     78c:	1f 93       	push	r17
     78e:	cf 93       	push	r28
     790:	df 93       	push	r29
     792:	8c 01       	movw	r16, r24
     794:	6a 01       	movw	r12, r20
     796:	7b 01       	movw	r14, r22
	lcd_pos(1,0);	
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	81 e0       	ldi	r24, 0x01	; 1
     79c:	0e 94 49 01 	call	0x292	; 0x292 <lcd_pos>


int getCycles(int freq, double duration){
	double Thigh=freq*WAIT_RES;	//convert #defined frequency to real frequency
	double period=Thigh*2;		//p=Thigh+Thigh
	int cycles=duration/period;//k=duration/p
     7a0:	b8 01       	movw	r22, r16
     7a2:	01 2e       	mov	r0, r17
     7a4:	00 0c       	add	r0, r0
     7a6:	88 0b       	sbc	r24, r24
     7a8:	99 0b       	sbc	r25, r25
     7aa:	0e 94 1b 05 	call	0xa36	; 0xa36 <__floatsisf>
     7ae:	27 e1       	ldi	r18, 0x17	; 23
     7b0:	37 eb       	ldi	r19, 0xB7	; 183
     7b2:	41 e5       	ldi	r20, 0x51	; 81
     7b4:	58 e3       	ldi	r21, 0x38	; 56
     7b6:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__mulsf3>
     7ba:	9b 01       	movw	r18, r22
     7bc:	ac 01       	movw	r20, r24
     7be:	0e 94 05 04 	call	0x80a	; 0x80a <__addsf3>
     7c2:	9b 01       	movw	r18, r22
     7c4:	ac 01       	movw	r20, r24
     7c6:	c7 01       	movw	r24, r14
     7c8:	b6 01       	movw	r22, r12
     7ca:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__divsf3>
     7ce:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__fixsfsi>
     7d2:	7b 01       	movw	r14, r22
int pitch=2;
void playNote(int freq, double duration){
	lcd_pos(1,0);	
	int i;
	int cycles=getCycles(freq,duration);
	for(i=0;i<cycles;++i){
     7d4:	16 16       	cp	r1, r22
     7d6:	17 06       	cpc	r1, r23
     7d8:	74 f4       	brge	.+28     	; 0x7f6 <playNote+0x74>
     7da:	c0 e0       	ldi	r28, 0x00	; 0
     7dc:	d0 e0       	ldi	r29, 0x00	; 0
		SET_BIT(PORTB,3);
     7de:	c3 9a       	sbi	0x18, 3	; 24
		note_wait(freq);
     7e0:	c8 01       	movw	r24, r16
     7e2:	0e 94 5a 00 	call	0xb4	; 0xb4 <note_wait>
		CLR_BIT(PORTB,3);
     7e6:	c3 98       	cbi	0x18, 3	; 24
		note_wait(freq);
     7e8:	c8 01       	movw	r24, r16
     7ea:	0e 94 5a 00 	call	0xb4	; 0xb4 <note_wait>
int pitch=2;
void playNote(int freq, double duration){
	lcd_pos(1,0);	
	int i;
	int cycles=getCycles(freq,duration);
	for(i=0;i<cycles;++i){
     7ee:	21 96       	adiw	r28, 0x01	; 1
     7f0:	ce 15       	cp	r28, r14
     7f2:	df 05       	cpc	r29, r15
     7f4:	a1 f7       	brne	.-24     	; 0x7de <playNote+0x5c>
		SET_BIT(PORTB,3);
		note_wait(freq);
		CLR_BIT(PORTB,3);
		note_wait(freq);
	}	
}
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	1f 91       	pop	r17
     7fc:	0f 91       	pop	r16
     7fe:	ff 90       	pop	r15
     800:	ef 90       	pop	r14
     802:	df 90       	pop	r13
     804:	cf 90       	pop	r12
     806:	08 95       	ret

00000808 <__subsf3>:
     808:	50 58       	subi	r21, 0x80	; 128

0000080a <__addsf3>:
     80a:	bb 27       	eor	r27, r27
     80c:	aa 27       	eor	r26, r26
     80e:	0e 94 1c 04 	call	0x838	; 0x838 <__addsf3x>
     812:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_round>
     816:	0e 94 5f 05 	call	0xabe	; 0xabe <__fp_pscA>
     81a:	38 f0       	brcs	.+14     	; 0x82a <__addsf3+0x20>
     81c:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_pscB>
     820:	20 f0       	brcs	.+8      	; 0x82a <__addsf3+0x20>
     822:	39 f4       	brne	.+14     	; 0x832 <__addsf3+0x28>
     824:	9f 3f       	cpi	r25, 0xFF	; 255
     826:	19 f4       	brne	.+6      	; 0x82e <__addsf3+0x24>
     828:	26 f4       	brtc	.+8      	; 0x832 <__addsf3+0x28>
     82a:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_nan>
     82e:	0e f4       	brtc	.+2      	; 0x832 <__addsf3+0x28>
     830:	e0 95       	com	r30
     832:	e7 fb       	bst	r30, 7
     834:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_inf>

00000838 <__addsf3x>:
     838:	e9 2f       	mov	r30, r25
     83a:	0e 94 7e 05 	call	0xafc	; 0xafc <__fp_split3>
     83e:	58 f3       	brcs	.-42     	; 0x816 <__addsf3+0xc>
     840:	ba 17       	cp	r27, r26
     842:	62 07       	cpc	r22, r18
     844:	73 07       	cpc	r23, r19
     846:	84 07       	cpc	r24, r20
     848:	95 07       	cpc	r25, r21
     84a:	20 f0       	brcs	.+8      	; 0x854 <__addsf3x+0x1c>
     84c:	79 f4       	brne	.+30     	; 0x86c <__stack+0xd>
     84e:	a6 f5       	brtc	.+104    	; 0x8b8 <__stack+0x59>
     850:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_zero>
     854:	0e f4       	brtc	.+2      	; 0x858 <__addsf3x+0x20>
     856:	e0 95       	com	r30
     858:	0b 2e       	mov	r0, r27
     85a:	ba 2f       	mov	r27, r26
     85c:	a0 2d       	mov	r26, r0
     85e:	0b 01       	movw	r0, r22
     860:	b9 01       	movw	r22, r18
     862:	90 01       	movw	r18, r0
     864:	0c 01       	movw	r0, r24
     866:	ca 01       	movw	r24, r20
     868:	a0 01       	movw	r20, r0
     86a:	11 24       	eor	r1, r1
     86c:	ff 27       	eor	r31, r31
     86e:	59 1b       	sub	r21, r25
     870:	99 f0       	breq	.+38     	; 0x898 <__stack+0x39>
     872:	59 3f       	cpi	r21, 0xF9	; 249
     874:	50 f4       	brcc	.+20     	; 0x88a <__stack+0x2b>
     876:	50 3e       	cpi	r21, 0xE0	; 224
     878:	68 f1       	brcs	.+90     	; 0x8d4 <__stack+0x75>
     87a:	1a 16       	cp	r1, r26
     87c:	f0 40       	sbci	r31, 0x00	; 0
     87e:	a2 2f       	mov	r26, r18
     880:	23 2f       	mov	r18, r19
     882:	34 2f       	mov	r19, r20
     884:	44 27       	eor	r20, r20
     886:	58 5f       	subi	r21, 0xF8	; 248
     888:	f3 cf       	rjmp	.-26     	; 0x870 <__stack+0x11>
     88a:	46 95       	lsr	r20
     88c:	37 95       	ror	r19
     88e:	27 95       	ror	r18
     890:	a7 95       	ror	r26
     892:	f0 40       	sbci	r31, 0x00	; 0
     894:	53 95       	inc	r21
     896:	c9 f7       	brne	.-14     	; 0x88a <__stack+0x2b>
     898:	7e f4       	brtc	.+30     	; 0x8b8 <__stack+0x59>
     89a:	1f 16       	cp	r1, r31
     89c:	ba 0b       	sbc	r27, r26
     89e:	62 0b       	sbc	r22, r18
     8a0:	73 0b       	sbc	r23, r19
     8a2:	84 0b       	sbc	r24, r20
     8a4:	ba f0       	brmi	.+46     	; 0x8d4 <__stack+0x75>
     8a6:	91 50       	subi	r25, 0x01	; 1
     8a8:	a1 f0       	breq	.+40     	; 0x8d2 <__stack+0x73>
     8aa:	ff 0f       	add	r31, r31
     8ac:	bb 1f       	adc	r27, r27
     8ae:	66 1f       	adc	r22, r22
     8b0:	77 1f       	adc	r23, r23
     8b2:	88 1f       	adc	r24, r24
     8b4:	c2 f7       	brpl	.-16     	; 0x8a6 <__stack+0x47>
     8b6:	0e c0       	rjmp	.+28     	; 0x8d4 <__stack+0x75>
     8b8:	ba 0f       	add	r27, r26
     8ba:	62 1f       	adc	r22, r18
     8bc:	73 1f       	adc	r23, r19
     8be:	84 1f       	adc	r24, r20
     8c0:	48 f4       	brcc	.+18     	; 0x8d4 <__stack+0x75>
     8c2:	87 95       	ror	r24
     8c4:	77 95       	ror	r23
     8c6:	67 95       	ror	r22
     8c8:	b7 95       	ror	r27
     8ca:	f7 95       	ror	r31
     8cc:	9e 3f       	cpi	r25, 0xFE	; 254
     8ce:	08 f0       	brcs	.+2      	; 0x8d2 <__stack+0x73>
     8d0:	b0 cf       	rjmp	.-160    	; 0x832 <__addsf3+0x28>
     8d2:	93 95       	inc	r25
     8d4:	88 0f       	add	r24, r24
     8d6:	08 f0       	brcs	.+2      	; 0x8da <__stack+0x7b>
     8d8:	99 27       	eor	r25, r25
     8da:	ee 0f       	add	r30, r30
     8dc:	97 95       	ror	r25
     8de:	87 95       	ror	r24
     8e0:	08 95       	ret

000008e2 <__divsf3>:
     8e2:	0e 94 85 04 	call	0x90a	; 0x90a <__divsf3x>
     8e6:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_round>
     8ea:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_pscB>
     8ee:	58 f0       	brcs	.+22     	; 0x906 <__divsf3+0x24>
     8f0:	0e 94 5f 05 	call	0xabe	; 0xabe <__fp_pscA>
     8f4:	40 f0       	brcs	.+16     	; 0x906 <__divsf3+0x24>
     8f6:	29 f4       	brne	.+10     	; 0x902 <__divsf3+0x20>
     8f8:	5f 3f       	cpi	r21, 0xFF	; 255
     8fa:	29 f0       	breq	.+10     	; 0x906 <__divsf3+0x24>
     8fc:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_inf>
     900:	51 11       	cpse	r21, r1
     902:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__fp_szero>
     906:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_nan>

0000090a <__divsf3x>:
     90a:	0e 94 7e 05 	call	0xafc	; 0xafc <__fp_split3>
     90e:	68 f3       	brcs	.-38     	; 0x8ea <__divsf3+0x8>

00000910 <__divsf3_pse>:
     910:	99 23       	and	r25, r25
     912:	b1 f3       	breq	.-20     	; 0x900 <__divsf3+0x1e>
     914:	55 23       	and	r21, r21
     916:	91 f3       	breq	.-28     	; 0x8fc <__divsf3+0x1a>
     918:	95 1b       	sub	r25, r21
     91a:	55 0b       	sbc	r21, r21
     91c:	bb 27       	eor	r27, r27
     91e:	aa 27       	eor	r26, r26
     920:	62 17       	cp	r22, r18
     922:	73 07       	cpc	r23, r19
     924:	84 07       	cpc	r24, r20
     926:	38 f0       	brcs	.+14     	; 0x936 <__divsf3_pse+0x26>
     928:	9f 5f       	subi	r25, 0xFF	; 255
     92a:	5f 4f       	sbci	r21, 0xFF	; 255
     92c:	22 0f       	add	r18, r18
     92e:	33 1f       	adc	r19, r19
     930:	44 1f       	adc	r20, r20
     932:	aa 1f       	adc	r26, r26
     934:	a9 f3       	breq	.-22     	; 0x920 <__divsf3_pse+0x10>
     936:	35 d0       	rcall	.+106    	; 0x9a2 <__divsf3_pse+0x92>
     938:	0e 2e       	mov	r0, r30
     93a:	3a f0       	brmi	.+14     	; 0x94a <__divsf3_pse+0x3a>
     93c:	e0 e8       	ldi	r30, 0x80	; 128
     93e:	32 d0       	rcall	.+100    	; 0x9a4 <__divsf3_pse+0x94>
     940:	91 50       	subi	r25, 0x01	; 1
     942:	50 40       	sbci	r21, 0x00	; 0
     944:	e6 95       	lsr	r30
     946:	00 1c       	adc	r0, r0
     948:	ca f7       	brpl	.-14     	; 0x93c <__divsf3_pse+0x2c>
     94a:	2b d0       	rcall	.+86     	; 0x9a2 <__divsf3_pse+0x92>
     94c:	fe 2f       	mov	r31, r30
     94e:	29 d0       	rcall	.+82     	; 0x9a2 <__divsf3_pse+0x92>
     950:	66 0f       	add	r22, r22
     952:	77 1f       	adc	r23, r23
     954:	88 1f       	adc	r24, r24
     956:	bb 1f       	adc	r27, r27
     958:	26 17       	cp	r18, r22
     95a:	37 07       	cpc	r19, r23
     95c:	48 07       	cpc	r20, r24
     95e:	ab 07       	cpc	r26, r27
     960:	b0 e8       	ldi	r27, 0x80	; 128
     962:	09 f0       	breq	.+2      	; 0x966 <__divsf3_pse+0x56>
     964:	bb 0b       	sbc	r27, r27
     966:	80 2d       	mov	r24, r0
     968:	bf 01       	movw	r22, r30
     96a:	ff 27       	eor	r31, r31
     96c:	93 58       	subi	r25, 0x83	; 131
     96e:	5f 4f       	sbci	r21, 0xFF	; 255
     970:	3a f0       	brmi	.+14     	; 0x980 <__divsf3_pse+0x70>
     972:	9e 3f       	cpi	r25, 0xFE	; 254
     974:	51 05       	cpc	r21, r1
     976:	78 f0       	brcs	.+30     	; 0x996 <__divsf3_pse+0x86>
     978:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_inf>
     97c:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__fp_szero>
     980:	5f 3f       	cpi	r21, 0xFF	; 255
     982:	e4 f3       	brlt	.-8      	; 0x97c <__divsf3_pse+0x6c>
     984:	98 3e       	cpi	r25, 0xE8	; 232
     986:	d4 f3       	brlt	.-12     	; 0x97c <__divsf3_pse+0x6c>
     988:	86 95       	lsr	r24
     98a:	77 95       	ror	r23
     98c:	67 95       	ror	r22
     98e:	b7 95       	ror	r27
     990:	f7 95       	ror	r31
     992:	9f 5f       	subi	r25, 0xFF	; 255
     994:	c9 f7       	brne	.-14     	; 0x988 <__divsf3_pse+0x78>
     996:	88 0f       	add	r24, r24
     998:	91 1d       	adc	r25, r1
     99a:	96 95       	lsr	r25
     99c:	87 95       	ror	r24
     99e:	97 f9       	bld	r25, 7
     9a0:	08 95       	ret
     9a2:	e1 e0       	ldi	r30, 0x01	; 1
     9a4:	66 0f       	add	r22, r22
     9a6:	77 1f       	adc	r23, r23
     9a8:	88 1f       	adc	r24, r24
     9aa:	bb 1f       	adc	r27, r27
     9ac:	62 17       	cp	r22, r18
     9ae:	73 07       	cpc	r23, r19
     9b0:	84 07       	cpc	r24, r20
     9b2:	ba 07       	cpc	r27, r26
     9b4:	20 f0       	brcs	.+8      	; 0x9be <__divsf3_pse+0xae>
     9b6:	62 1b       	sub	r22, r18
     9b8:	73 0b       	sbc	r23, r19
     9ba:	84 0b       	sbc	r24, r20
     9bc:	ba 0b       	sbc	r27, r26
     9be:	ee 1f       	adc	r30, r30
     9c0:	88 f7       	brcc	.-30     	; 0x9a4 <__divsf3_pse+0x94>
     9c2:	e0 95       	com	r30
     9c4:	08 95       	ret

000009c6 <__fixsfsi>:
     9c6:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__fixunssfsi>
     9ca:	68 94       	set
     9cc:	b1 11       	cpse	r27, r1
     9ce:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__fp_szero>
     9d2:	08 95       	ret

000009d4 <__fixunssfsi>:
     9d4:	0e 94 86 05 	call	0xb0c	; 0xb0c <__fp_splitA>
     9d8:	88 f0       	brcs	.+34     	; 0x9fc <__fixunssfsi+0x28>
     9da:	9f 57       	subi	r25, 0x7F	; 127
     9dc:	98 f0       	brcs	.+38     	; 0xa04 <__fixunssfsi+0x30>
     9de:	b9 2f       	mov	r27, r25
     9e0:	99 27       	eor	r25, r25
     9e2:	b7 51       	subi	r27, 0x17	; 23
     9e4:	b0 f0       	brcs	.+44     	; 0xa12 <__fixunssfsi+0x3e>
     9e6:	e1 f0       	breq	.+56     	; 0xa20 <__fixunssfsi+0x4c>
     9e8:	66 0f       	add	r22, r22
     9ea:	77 1f       	adc	r23, r23
     9ec:	88 1f       	adc	r24, r24
     9ee:	99 1f       	adc	r25, r25
     9f0:	1a f0       	brmi	.+6      	; 0x9f8 <__fixunssfsi+0x24>
     9f2:	ba 95       	dec	r27
     9f4:	c9 f7       	brne	.-14     	; 0x9e8 <__fixunssfsi+0x14>
     9f6:	14 c0       	rjmp	.+40     	; 0xa20 <__fixunssfsi+0x4c>
     9f8:	b1 30       	cpi	r27, 0x01	; 1
     9fa:	91 f0       	breq	.+36     	; 0xa20 <__fixunssfsi+0x4c>
     9fc:	0e 94 a0 05 	call	0xb40	; 0xb40 <__fp_zero>
     a00:	b1 e0       	ldi	r27, 0x01	; 1
     a02:	08 95       	ret
     a04:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_zero>
     a08:	67 2f       	mov	r22, r23
     a0a:	78 2f       	mov	r23, r24
     a0c:	88 27       	eor	r24, r24
     a0e:	b8 5f       	subi	r27, 0xF8	; 248
     a10:	39 f0       	breq	.+14     	; 0xa20 <__fixunssfsi+0x4c>
     a12:	b9 3f       	cpi	r27, 0xF9	; 249
     a14:	cc f3       	brlt	.-14     	; 0xa08 <__fixunssfsi+0x34>
     a16:	86 95       	lsr	r24
     a18:	77 95       	ror	r23
     a1a:	67 95       	ror	r22
     a1c:	b3 95       	inc	r27
     a1e:	d9 f7       	brne	.-10     	; 0xa16 <__fixunssfsi+0x42>
     a20:	3e f4       	brtc	.+14     	; 0xa30 <__fixunssfsi+0x5c>
     a22:	90 95       	com	r25
     a24:	80 95       	com	r24
     a26:	70 95       	com	r23
     a28:	61 95       	neg	r22
     a2a:	7f 4f       	sbci	r23, 0xFF	; 255
     a2c:	8f 4f       	sbci	r24, 0xFF	; 255
     a2e:	9f 4f       	sbci	r25, 0xFF	; 255
     a30:	08 95       	ret

00000a32 <__floatunsisf>:
     a32:	e8 94       	clt
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__floatsisf+0x12>

00000a36 <__floatsisf>:
     a36:	97 fb       	bst	r25, 7
     a38:	3e f4       	brtc	.+14     	; 0xa48 <__floatsisf+0x12>
     a3a:	90 95       	com	r25
     a3c:	80 95       	com	r24
     a3e:	70 95       	com	r23
     a40:	61 95       	neg	r22
     a42:	7f 4f       	sbci	r23, 0xFF	; 255
     a44:	8f 4f       	sbci	r24, 0xFF	; 255
     a46:	9f 4f       	sbci	r25, 0xFF	; 255
     a48:	99 23       	and	r25, r25
     a4a:	a9 f0       	breq	.+42     	; 0xa76 <__floatsisf+0x40>
     a4c:	f9 2f       	mov	r31, r25
     a4e:	96 e9       	ldi	r25, 0x96	; 150
     a50:	bb 27       	eor	r27, r27
     a52:	93 95       	inc	r25
     a54:	f6 95       	lsr	r31
     a56:	87 95       	ror	r24
     a58:	77 95       	ror	r23
     a5a:	67 95       	ror	r22
     a5c:	b7 95       	ror	r27
     a5e:	f1 11       	cpse	r31, r1
     a60:	f8 cf       	rjmp	.-16     	; 0xa52 <__floatsisf+0x1c>
     a62:	fa f4       	brpl	.+62     	; 0xaa2 <__floatsisf+0x6c>
     a64:	bb 0f       	add	r27, r27
     a66:	11 f4       	brne	.+4      	; 0xa6c <__floatsisf+0x36>
     a68:	60 ff       	sbrs	r22, 0
     a6a:	1b c0       	rjmp	.+54     	; 0xaa2 <__floatsisf+0x6c>
     a6c:	6f 5f       	subi	r22, 0xFF	; 255
     a6e:	7f 4f       	sbci	r23, 0xFF	; 255
     a70:	8f 4f       	sbci	r24, 0xFF	; 255
     a72:	9f 4f       	sbci	r25, 0xFF	; 255
     a74:	16 c0       	rjmp	.+44     	; 0xaa2 <__floatsisf+0x6c>
     a76:	88 23       	and	r24, r24
     a78:	11 f0       	breq	.+4      	; 0xa7e <__floatsisf+0x48>
     a7a:	96 e9       	ldi	r25, 0x96	; 150
     a7c:	11 c0       	rjmp	.+34     	; 0xaa0 <__floatsisf+0x6a>
     a7e:	77 23       	and	r23, r23
     a80:	21 f0       	breq	.+8      	; 0xa8a <__floatsisf+0x54>
     a82:	9e e8       	ldi	r25, 0x8E	; 142
     a84:	87 2f       	mov	r24, r23
     a86:	76 2f       	mov	r23, r22
     a88:	05 c0       	rjmp	.+10     	; 0xa94 <__floatsisf+0x5e>
     a8a:	66 23       	and	r22, r22
     a8c:	71 f0       	breq	.+28     	; 0xaaa <__floatsisf+0x74>
     a8e:	96 e8       	ldi	r25, 0x86	; 134
     a90:	86 2f       	mov	r24, r22
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	60 e0       	ldi	r22, 0x00	; 0
     a96:	2a f0       	brmi	.+10     	; 0xaa2 <__floatsisf+0x6c>
     a98:	9a 95       	dec	r25
     a9a:	66 0f       	add	r22, r22
     a9c:	77 1f       	adc	r23, r23
     a9e:	88 1f       	adc	r24, r24
     aa0:	da f7       	brpl	.-10     	; 0xa98 <__floatsisf+0x62>
     aa2:	88 0f       	add	r24, r24
     aa4:	96 95       	lsr	r25
     aa6:	87 95       	ror	r24
     aa8:	97 f9       	bld	r25, 7
     aaa:	08 95       	ret

00000aac <__fp_inf>:
     aac:	97 f9       	bld	r25, 7
     aae:	9f 67       	ori	r25, 0x7F	; 127
     ab0:	80 e8       	ldi	r24, 0x80	; 128
     ab2:	70 e0       	ldi	r23, 0x00	; 0
     ab4:	60 e0       	ldi	r22, 0x00	; 0
     ab6:	08 95       	ret

00000ab8 <__fp_nan>:
     ab8:	9f ef       	ldi	r25, 0xFF	; 255
     aba:	80 ec       	ldi	r24, 0xC0	; 192
     abc:	08 95       	ret

00000abe <__fp_pscA>:
     abe:	00 24       	eor	r0, r0
     ac0:	0a 94       	dec	r0
     ac2:	16 16       	cp	r1, r22
     ac4:	17 06       	cpc	r1, r23
     ac6:	18 06       	cpc	r1, r24
     ac8:	09 06       	cpc	r0, r25
     aca:	08 95       	ret

00000acc <__fp_pscB>:
     acc:	00 24       	eor	r0, r0
     ace:	0a 94       	dec	r0
     ad0:	12 16       	cp	r1, r18
     ad2:	13 06       	cpc	r1, r19
     ad4:	14 06       	cpc	r1, r20
     ad6:	05 06       	cpc	r0, r21
     ad8:	08 95       	ret

00000ada <__fp_round>:
     ada:	09 2e       	mov	r0, r25
     adc:	03 94       	inc	r0
     ade:	00 0c       	add	r0, r0
     ae0:	11 f4       	brne	.+4      	; 0xae6 <__fp_round+0xc>
     ae2:	88 23       	and	r24, r24
     ae4:	52 f0       	brmi	.+20     	; 0xafa <__fp_round+0x20>
     ae6:	bb 0f       	add	r27, r27
     ae8:	40 f4       	brcc	.+16     	; 0xafa <__fp_round+0x20>
     aea:	bf 2b       	or	r27, r31
     aec:	11 f4       	brne	.+4      	; 0xaf2 <__fp_round+0x18>
     aee:	60 ff       	sbrs	r22, 0
     af0:	04 c0       	rjmp	.+8      	; 0xafa <__fp_round+0x20>
     af2:	6f 5f       	subi	r22, 0xFF	; 255
     af4:	7f 4f       	sbci	r23, 0xFF	; 255
     af6:	8f 4f       	sbci	r24, 0xFF	; 255
     af8:	9f 4f       	sbci	r25, 0xFF	; 255
     afa:	08 95       	ret

00000afc <__fp_split3>:
     afc:	57 fd       	sbrc	r21, 7
     afe:	90 58       	subi	r25, 0x80	; 128
     b00:	44 0f       	add	r20, r20
     b02:	55 1f       	adc	r21, r21
     b04:	59 f0       	breq	.+22     	; 0xb1c <__fp_splitA+0x10>
     b06:	5f 3f       	cpi	r21, 0xFF	; 255
     b08:	71 f0       	breq	.+28     	; 0xb26 <__fp_splitA+0x1a>
     b0a:	47 95       	ror	r20

00000b0c <__fp_splitA>:
     b0c:	88 0f       	add	r24, r24
     b0e:	97 fb       	bst	r25, 7
     b10:	99 1f       	adc	r25, r25
     b12:	61 f0       	breq	.+24     	; 0xb2c <__fp_splitA+0x20>
     b14:	9f 3f       	cpi	r25, 0xFF	; 255
     b16:	79 f0       	breq	.+30     	; 0xb36 <__fp_splitA+0x2a>
     b18:	87 95       	ror	r24
     b1a:	08 95       	ret
     b1c:	12 16       	cp	r1, r18
     b1e:	13 06       	cpc	r1, r19
     b20:	14 06       	cpc	r1, r20
     b22:	55 1f       	adc	r21, r21
     b24:	f2 cf       	rjmp	.-28     	; 0xb0a <__fp_split3+0xe>
     b26:	46 95       	lsr	r20
     b28:	f1 df       	rcall	.-30     	; 0xb0c <__fp_splitA>
     b2a:	08 c0       	rjmp	.+16     	; 0xb3c <__fp_splitA+0x30>
     b2c:	16 16       	cp	r1, r22
     b2e:	17 06       	cpc	r1, r23
     b30:	18 06       	cpc	r1, r24
     b32:	99 1f       	adc	r25, r25
     b34:	f1 cf       	rjmp	.-30     	; 0xb18 <__fp_splitA+0xc>
     b36:	86 95       	lsr	r24
     b38:	71 05       	cpc	r23, r1
     b3a:	61 05       	cpc	r22, r1
     b3c:	08 94       	sec
     b3e:	08 95       	ret

00000b40 <__fp_zero>:
     b40:	e8 94       	clt

00000b42 <__fp_szero>:
     b42:	bb 27       	eor	r27, r27
     b44:	66 27       	eor	r22, r22
     b46:	77 27       	eor	r23, r23
     b48:	cb 01       	movw	r24, r22
     b4a:	97 f9       	bld	r25, 7
     b4c:	08 95       	ret

00000b4e <__mulsf3>:
     b4e:	0e 94 ba 05 	call	0xb74	; 0xb74 <__mulsf3x>
     b52:	0c 94 6d 05 	jmp	0xada	; 0xada <__fp_round>
     b56:	0e 94 5f 05 	call	0xabe	; 0xabe <__fp_pscA>
     b5a:	38 f0       	brcs	.+14     	; 0xb6a <__mulsf3+0x1c>
     b5c:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_pscB>
     b60:	20 f0       	brcs	.+8      	; 0xb6a <__mulsf3+0x1c>
     b62:	95 23       	and	r25, r21
     b64:	11 f0       	breq	.+4      	; 0xb6a <__mulsf3+0x1c>
     b66:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_inf>
     b6a:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_nan>
     b6e:	11 24       	eor	r1, r1
     b70:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__fp_szero>

00000b74 <__mulsf3x>:
     b74:	0e 94 7e 05 	call	0xafc	; 0xafc <__fp_split3>
     b78:	70 f3       	brcs	.-36     	; 0xb56 <__mulsf3+0x8>

00000b7a <__mulsf3_pse>:
     b7a:	95 9f       	mul	r25, r21
     b7c:	c1 f3       	breq	.-16     	; 0xb6e <__mulsf3+0x20>
     b7e:	95 0f       	add	r25, r21
     b80:	50 e0       	ldi	r21, 0x00	; 0
     b82:	55 1f       	adc	r21, r21
     b84:	62 9f       	mul	r22, r18
     b86:	f0 01       	movw	r30, r0
     b88:	72 9f       	mul	r23, r18
     b8a:	bb 27       	eor	r27, r27
     b8c:	f0 0d       	add	r31, r0
     b8e:	b1 1d       	adc	r27, r1
     b90:	63 9f       	mul	r22, r19
     b92:	aa 27       	eor	r26, r26
     b94:	f0 0d       	add	r31, r0
     b96:	b1 1d       	adc	r27, r1
     b98:	aa 1f       	adc	r26, r26
     b9a:	64 9f       	mul	r22, r20
     b9c:	66 27       	eor	r22, r22
     b9e:	b0 0d       	add	r27, r0
     ba0:	a1 1d       	adc	r26, r1
     ba2:	66 1f       	adc	r22, r22
     ba4:	82 9f       	mul	r24, r18
     ba6:	22 27       	eor	r18, r18
     ba8:	b0 0d       	add	r27, r0
     baa:	a1 1d       	adc	r26, r1
     bac:	62 1f       	adc	r22, r18
     bae:	73 9f       	mul	r23, r19
     bb0:	b0 0d       	add	r27, r0
     bb2:	a1 1d       	adc	r26, r1
     bb4:	62 1f       	adc	r22, r18
     bb6:	83 9f       	mul	r24, r19
     bb8:	a0 0d       	add	r26, r0
     bba:	61 1d       	adc	r22, r1
     bbc:	22 1f       	adc	r18, r18
     bbe:	74 9f       	mul	r23, r20
     bc0:	33 27       	eor	r19, r19
     bc2:	a0 0d       	add	r26, r0
     bc4:	61 1d       	adc	r22, r1
     bc6:	23 1f       	adc	r18, r19
     bc8:	84 9f       	mul	r24, r20
     bca:	60 0d       	add	r22, r0
     bcc:	21 1d       	adc	r18, r1
     bce:	82 2f       	mov	r24, r18
     bd0:	76 2f       	mov	r23, r22
     bd2:	6a 2f       	mov	r22, r26
     bd4:	11 24       	eor	r1, r1
     bd6:	9f 57       	subi	r25, 0x7F	; 127
     bd8:	50 40       	sbci	r21, 0x00	; 0
     bda:	9a f0       	brmi	.+38     	; 0xc02 <__mulsf3_pse+0x88>
     bdc:	f1 f0       	breq	.+60     	; 0xc1a <__mulsf3_pse+0xa0>
     bde:	88 23       	and	r24, r24
     be0:	4a f0       	brmi	.+18     	; 0xbf4 <__mulsf3_pse+0x7a>
     be2:	ee 0f       	add	r30, r30
     be4:	ff 1f       	adc	r31, r31
     be6:	bb 1f       	adc	r27, r27
     be8:	66 1f       	adc	r22, r22
     bea:	77 1f       	adc	r23, r23
     bec:	88 1f       	adc	r24, r24
     bee:	91 50       	subi	r25, 0x01	; 1
     bf0:	50 40       	sbci	r21, 0x00	; 0
     bf2:	a9 f7       	brne	.-22     	; 0xbde <__mulsf3_pse+0x64>
     bf4:	9e 3f       	cpi	r25, 0xFE	; 254
     bf6:	51 05       	cpc	r21, r1
     bf8:	80 f0       	brcs	.+32     	; 0xc1a <__mulsf3_pse+0xa0>
     bfa:	0c 94 56 05 	jmp	0xaac	; 0xaac <__fp_inf>
     bfe:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__fp_szero>
     c02:	5f 3f       	cpi	r21, 0xFF	; 255
     c04:	e4 f3       	brlt	.-8      	; 0xbfe <__mulsf3_pse+0x84>
     c06:	98 3e       	cpi	r25, 0xE8	; 232
     c08:	d4 f3       	brlt	.-12     	; 0xbfe <__mulsf3_pse+0x84>
     c0a:	86 95       	lsr	r24
     c0c:	77 95       	ror	r23
     c0e:	67 95       	ror	r22
     c10:	b7 95       	ror	r27
     c12:	f7 95       	ror	r31
     c14:	e7 95       	ror	r30
     c16:	9f 5f       	subi	r25, 0xFF	; 255
     c18:	c1 f7       	brne	.-16     	; 0xc0a <__mulsf3_pse+0x90>
     c1a:	fe 2b       	or	r31, r30
     c1c:	88 0f       	add	r24, r24
     c1e:	91 1d       	adc	r25, r1
     c20:	96 95       	lsr	r25
     c22:	87 95       	ror	r24
     c24:	97 f9       	bld	r25, 7
     c26:	08 95       	ret

00000c28 <__divmodsi4>:
     c28:	05 2e       	mov	r0, r21
     c2a:	97 fb       	bst	r25, 7
     c2c:	1e f4       	brtc	.+6      	; 0xc34 <__divmodsi4+0xc>
     c2e:	00 94       	com	r0
     c30:	0e 94 2b 06 	call	0xc56	; 0xc56 <__negsi2>
     c34:	57 fd       	sbrc	r21, 7
     c36:	07 d0       	rcall	.+14     	; 0xc46 <__divmodsi4_neg2>
     c38:	0e 94 33 06 	call	0xc66	; 0xc66 <__udivmodsi4>
     c3c:	07 fc       	sbrc	r0, 7
     c3e:	03 d0       	rcall	.+6      	; 0xc46 <__divmodsi4_neg2>
     c40:	4e f4       	brtc	.+18     	; 0xc54 <__divmodsi4_exit>
     c42:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__negsi2>

00000c46 <__divmodsi4_neg2>:
     c46:	50 95       	com	r21
     c48:	40 95       	com	r20
     c4a:	30 95       	com	r19
     c4c:	21 95       	neg	r18
     c4e:	3f 4f       	sbci	r19, 0xFF	; 255
     c50:	4f 4f       	sbci	r20, 0xFF	; 255
     c52:	5f 4f       	sbci	r21, 0xFF	; 255

00000c54 <__divmodsi4_exit>:
     c54:	08 95       	ret

00000c56 <__negsi2>:
     c56:	90 95       	com	r25
     c58:	80 95       	com	r24
     c5a:	70 95       	com	r23
     c5c:	61 95       	neg	r22
     c5e:	7f 4f       	sbci	r23, 0xFF	; 255
     c60:	8f 4f       	sbci	r24, 0xFF	; 255
     c62:	9f 4f       	sbci	r25, 0xFF	; 255
     c64:	08 95       	ret

00000c66 <__udivmodsi4>:
     c66:	a1 e2       	ldi	r26, 0x21	; 33
     c68:	1a 2e       	mov	r1, r26
     c6a:	aa 1b       	sub	r26, r26
     c6c:	bb 1b       	sub	r27, r27
     c6e:	fd 01       	movw	r30, r26
     c70:	0d c0       	rjmp	.+26     	; 0xc8c <__udivmodsi4_ep>

00000c72 <__udivmodsi4_loop>:
     c72:	aa 1f       	adc	r26, r26
     c74:	bb 1f       	adc	r27, r27
     c76:	ee 1f       	adc	r30, r30
     c78:	ff 1f       	adc	r31, r31
     c7a:	a2 17       	cp	r26, r18
     c7c:	b3 07       	cpc	r27, r19
     c7e:	e4 07       	cpc	r30, r20
     c80:	f5 07       	cpc	r31, r21
     c82:	20 f0       	brcs	.+8      	; 0xc8c <__udivmodsi4_ep>
     c84:	a2 1b       	sub	r26, r18
     c86:	b3 0b       	sbc	r27, r19
     c88:	e4 0b       	sbc	r30, r20
     c8a:	f5 0b       	sbc	r31, r21

00000c8c <__udivmodsi4_ep>:
     c8c:	66 1f       	adc	r22, r22
     c8e:	77 1f       	adc	r23, r23
     c90:	88 1f       	adc	r24, r24
     c92:	99 1f       	adc	r25, r25
     c94:	1a 94       	dec	r1
     c96:	69 f7       	brne	.-38     	; 0xc72 <__udivmodsi4_loop>
     c98:	60 95       	com	r22
     c9a:	70 95       	com	r23
     c9c:	80 95       	com	r24
     c9e:	90 95       	com	r25
     ca0:	9b 01       	movw	r18, r22
     ca2:	ac 01       	movw	r20, r24
     ca4:	bd 01       	movw	r22, r26
     ca6:	cf 01       	movw	r24, r30
     ca8:	08 95       	ret

00000caa <sprintf>:
     caa:	ae e0       	ldi	r26, 0x0E	; 14
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	eb e5       	ldi	r30, 0x5B	; 91
     cb0:	f6 e0       	ldi	r31, 0x06	; 6
     cb2:	0c 94 16 09 	jmp	0x122c	; 0x122c <__prologue_saves__+0x1c>
     cb6:	0d 89       	ldd	r16, Y+21	; 0x15
     cb8:	1e 89       	ldd	r17, Y+22	; 0x16
     cba:	86 e0       	ldi	r24, 0x06	; 6
     cbc:	8c 83       	std	Y+4, r24	; 0x04
     cbe:	1a 83       	std	Y+2, r17	; 0x02
     cc0:	09 83       	std	Y+1, r16	; 0x01
     cc2:	8f ef       	ldi	r24, 0xFF	; 255
     cc4:	9f e7       	ldi	r25, 0x7F	; 127
     cc6:	9e 83       	std	Y+6, r25	; 0x06
     cc8:	8d 83       	std	Y+5, r24	; 0x05
     cca:	ae 01       	movw	r20, r28
     ccc:	47 5e       	subi	r20, 0xE7	; 231
     cce:	5f 4f       	sbci	r21, 0xFF	; 255
     cd0:	6f 89       	ldd	r22, Y+23	; 0x17
     cd2:	78 8d       	ldd	r23, Y+24	; 0x18
     cd4:	ce 01       	movw	r24, r28
     cd6:	01 96       	adiw	r24, 0x01	; 1
     cd8:	0e 94 77 06 	call	0xcee	; 0xcee <vfprintf>
     cdc:	ef 81       	ldd	r30, Y+7	; 0x07
     cde:	f8 85       	ldd	r31, Y+8	; 0x08
     ce0:	e0 0f       	add	r30, r16
     ce2:	f1 1f       	adc	r31, r17
     ce4:	10 82       	st	Z, r1
     ce6:	2e 96       	adiw	r28, 0x0e	; 14
     ce8:	e4 e0       	ldi	r30, 0x04	; 4
     cea:	0c 94 32 09 	jmp	0x1264	; 0x1264 <__epilogue_restores__+0x1c>

00000cee <vfprintf>:
     cee:	ab e0       	ldi	r26, 0x0B	; 11
     cf0:	b0 e0       	ldi	r27, 0x00	; 0
     cf2:	ed e7       	ldi	r30, 0x7D	; 125
     cf4:	f6 e0       	ldi	r31, 0x06	; 6
     cf6:	0c 94 08 09 	jmp	0x1210	; 0x1210 <__prologue_saves__>
     cfa:	6c 01       	movw	r12, r24
     cfc:	7b 01       	movw	r14, r22
     cfe:	8a 01       	movw	r16, r20
     d00:	fc 01       	movw	r30, r24
     d02:	17 82       	std	Z+7, r1	; 0x07
     d04:	16 82       	std	Z+6, r1	; 0x06
     d06:	83 81       	ldd	r24, Z+3	; 0x03
     d08:	81 ff       	sbrs	r24, 1
     d0a:	cc c1       	rjmp	.+920    	; 0x10a4 <vfprintf+0x3b6>
     d0c:	ce 01       	movw	r24, r28
     d0e:	01 96       	adiw	r24, 0x01	; 1
     d10:	3c 01       	movw	r6, r24
     d12:	f6 01       	movw	r30, r12
     d14:	93 81       	ldd	r25, Z+3	; 0x03
     d16:	f7 01       	movw	r30, r14
     d18:	93 fd       	sbrc	r25, 3
     d1a:	85 91       	lpm	r24, Z+
     d1c:	93 ff       	sbrs	r25, 3
     d1e:	81 91       	ld	r24, Z+
     d20:	7f 01       	movw	r14, r30
     d22:	88 23       	and	r24, r24
     d24:	09 f4       	brne	.+2      	; 0xd28 <vfprintf+0x3a>
     d26:	ba c1       	rjmp	.+884    	; 0x109c <vfprintf+0x3ae>
     d28:	85 32       	cpi	r24, 0x25	; 37
     d2a:	39 f4       	brne	.+14     	; 0xd3a <vfprintf+0x4c>
     d2c:	93 fd       	sbrc	r25, 3
     d2e:	85 91       	lpm	r24, Z+
     d30:	93 ff       	sbrs	r25, 3
     d32:	81 91       	ld	r24, Z+
     d34:	7f 01       	movw	r14, r30
     d36:	85 32       	cpi	r24, 0x25	; 37
     d38:	29 f4       	brne	.+10     	; 0xd44 <vfprintf+0x56>
     d3a:	b6 01       	movw	r22, r12
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
     d42:	e7 cf       	rjmp	.-50     	; 0xd12 <vfprintf+0x24>
     d44:	91 2c       	mov	r9, r1
     d46:	21 2c       	mov	r2, r1
     d48:	31 2c       	mov	r3, r1
     d4a:	ff e1       	ldi	r31, 0x1F	; 31
     d4c:	f3 15       	cp	r31, r3
     d4e:	d8 f0       	brcs	.+54     	; 0xd86 <vfprintf+0x98>
     d50:	8b 32       	cpi	r24, 0x2B	; 43
     d52:	79 f0       	breq	.+30     	; 0xd72 <vfprintf+0x84>
     d54:	38 f4       	brcc	.+14     	; 0xd64 <vfprintf+0x76>
     d56:	80 32       	cpi	r24, 0x20	; 32
     d58:	79 f0       	breq	.+30     	; 0xd78 <vfprintf+0x8a>
     d5a:	83 32       	cpi	r24, 0x23	; 35
     d5c:	a1 f4       	brne	.+40     	; 0xd86 <vfprintf+0x98>
     d5e:	23 2d       	mov	r18, r3
     d60:	20 61       	ori	r18, 0x10	; 16
     d62:	1d c0       	rjmp	.+58     	; 0xd9e <vfprintf+0xb0>
     d64:	8d 32       	cpi	r24, 0x2D	; 45
     d66:	61 f0       	breq	.+24     	; 0xd80 <vfprintf+0x92>
     d68:	80 33       	cpi	r24, 0x30	; 48
     d6a:	69 f4       	brne	.+26     	; 0xd86 <vfprintf+0x98>
     d6c:	23 2d       	mov	r18, r3
     d6e:	21 60       	ori	r18, 0x01	; 1
     d70:	16 c0       	rjmp	.+44     	; 0xd9e <vfprintf+0xb0>
     d72:	83 2d       	mov	r24, r3
     d74:	82 60       	ori	r24, 0x02	; 2
     d76:	38 2e       	mov	r3, r24
     d78:	e3 2d       	mov	r30, r3
     d7a:	e4 60       	ori	r30, 0x04	; 4
     d7c:	3e 2e       	mov	r3, r30
     d7e:	2a c0       	rjmp	.+84     	; 0xdd4 <vfprintf+0xe6>
     d80:	f3 2d       	mov	r31, r3
     d82:	f8 60       	ori	r31, 0x08	; 8
     d84:	1d c0       	rjmp	.+58     	; 0xdc0 <vfprintf+0xd2>
     d86:	37 fc       	sbrc	r3, 7
     d88:	2d c0       	rjmp	.+90     	; 0xde4 <vfprintf+0xf6>
     d8a:	20 ed       	ldi	r18, 0xD0	; 208
     d8c:	28 0f       	add	r18, r24
     d8e:	2a 30       	cpi	r18, 0x0A	; 10
     d90:	40 f0       	brcs	.+16     	; 0xda2 <vfprintf+0xb4>
     d92:	8e 32       	cpi	r24, 0x2E	; 46
     d94:	b9 f4       	brne	.+46     	; 0xdc4 <vfprintf+0xd6>
     d96:	36 fc       	sbrc	r3, 6
     d98:	81 c1       	rjmp	.+770    	; 0x109c <vfprintf+0x3ae>
     d9a:	23 2d       	mov	r18, r3
     d9c:	20 64       	ori	r18, 0x40	; 64
     d9e:	32 2e       	mov	r3, r18
     da0:	19 c0       	rjmp	.+50     	; 0xdd4 <vfprintf+0xe6>
     da2:	36 fe       	sbrs	r3, 6
     da4:	06 c0       	rjmp	.+12     	; 0xdb2 <vfprintf+0xc4>
     da6:	8a e0       	ldi	r24, 0x0A	; 10
     da8:	98 9e       	mul	r9, r24
     daa:	20 0d       	add	r18, r0
     dac:	11 24       	eor	r1, r1
     dae:	92 2e       	mov	r9, r18
     db0:	11 c0       	rjmp	.+34     	; 0xdd4 <vfprintf+0xe6>
     db2:	ea e0       	ldi	r30, 0x0A	; 10
     db4:	2e 9e       	mul	r2, r30
     db6:	20 0d       	add	r18, r0
     db8:	11 24       	eor	r1, r1
     dba:	22 2e       	mov	r2, r18
     dbc:	f3 2d       	mov	r31, r3
     dbe:	f0 62       	ori	r31, 0x20	; 32
     dc0:	3f 2e       	mov	r3, r31
     dc2:	08 c0       	rjmp	.+16     	; 0xdd4 <vfprintf+0xe6>
     dc4:	8c 36       	cpi	r24, 0x6C	; 108
     dc6:	21 f4       	brne	.+8      	; 0xdd0 <vfprintf+0xe2>
     dc8:	83 2d       	mov	r24, r3
     dca:	80 68       	ori	r24, 0x80	; 128
     dcc:	38 2e       	mov	r3, r24
     dce:	02 c0       	rjmp	.+4      	; 0xdd4 <vfprintf+0xe6>
     dd0:	88 36       	cpi	r24, 0x68	; 104
     dd2:	41 f4       	brne	.+16     	; 0xde4 <vfprintf+0xf6>
     dd4:	f7 01       	movw	r30, r14
     dd6:	93 fd       	sbrc	r25, 3
     dd8:	85 91       	lpm	r24, Z+
     dda:	93 ff       	sbrs	r25, 3
     ddc:	81 91       	ld	r24, Z+
     dde:	7f 01       	movw	r14, r30
     de0:	81 11       	cpse	r24, r1
     de2:	b3 cf       	rjmp	.-154    	; 0xd4a <vfprintf+0x5c>
     de4:	98 2f       	mov	r25, r24
     de6:	9f 7d       	andi	r25, 0xDF	; 223
     de8:	95 54       	subi	r25, 0x45	; 69
     dea:	93 30       	cpi	r25, 0x03	; 3
     dec:	28 f4       	brcc	.+10     	; 0xdf8 <vfprintf+0x10a>
     dee:	0c 5f       	subi	r16, 0xFC	; 252
     df0:	1f 4f       	sbci	r17, 0xFF	; 255
     df2:	9f e3       	ldi	r25, 0x3F	; 63
     df4:	99 83       	std	Y+1, r25	; 0x01
     df6:	0d c0       	rjmp	.+26     	; 0xe12 <vfprintf+0x124>
     df8:	83 36       	cpi	r24, 0x63	; 99
     dfa:	31 f0       	breq	.+12     	; 0xe08 <vfprintf+0x11a>
     dfc:	83 37       	cpi	r24, 0x73	; 115
     dfe:	71 f0       	breq	.+28     	; 0xe1c <vfprintf+0x12e>
     e00:	83 35       	cpi	r24, 0x53	; 83
     e02:	09 f0       	breq	.+2      	; 0xe06 <vfprintf+0x118>
     e04:	59 c0       	rjmp	.+178    	; 0xeb8 <vfprintf+0x1ca>
     e06:	21 c0       	rjmp	.+66     	; 0xe4a <vfprintf+0x15c>
     e08:	f8 01       	movw	r30, r16
     e0a:	80 81       	ld	r24, Z
     e0c:	89 83       	std	Y+1, r24	; 0x01
     e0e:	0e 5f       	subi	r16, 0xFE	; 254
     e10:	1f 4f       	sbci	r17, 0xFF	; 255
     e12:	88 24       	eor	r8, r8
     e14:	83 94       	inc	r8
     e16:	91 2c       	mov	r9, r1
     e18:	53 01       	movw	r10, r6
     e1a:	13 c0       	rjmp	.+38     	; 0xe42 <vfprintf+0x154>
     e1c:	28 01       	movw	r4, r16
     e1e:	f2 e0       	ldi	r31, 0x02	; 2
     e20:	4f 0e       	add	r4, r31
     e22:	51 1c       	adc	r5, r1
     e24:	f8 01       	movw	r30, r16
     e26:	a0 80       	ld	r10, Z
     e28:	b1 80       	ldd	r11, Z+1	; 0x01
     e2a:	36 fe       	sbrs	r3, 6
     e2c:	03 c0       	rjmp	.+6      	; 0xe34 <vfprintf+0x146>
     e2e:	69 2d       	mov	r22, r9
     e30:	70 e0       	ldi	r23, 0x00	; 0
     e32:	02 c0       	rjmp	.+4      	; 0xe38 <vfprintf+0x14a>
     e34:	6f ef       	ldi	r22, 0xFF	; 255
     e36:	7f ef       	ldi	r23, 0xFF	; 255
     e38:	c5 01       	movw	r24, r10
     e3a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <strnlen>
     e3e:	4c 01       	movw	r8, r24
     e40:	82 01       	movw	r16, r4
     e42:	f3 2d       	mov	r31, r3
     e44:	ff 77       	andi	r31, 0x7F	; 127
     e46:	3f 2e       	mov	r3, r31
     e48:	16 c0       	rjmp	.+44     	; 0xe76 <vfprintf+0x188>
     e4a:	28 01       	movw	r4, r16
     e4c:	22 e0       	ldi	r18, 0x02	; 2
     e4e:	42 0e       	add	r4, r18
     e50:	51 1c       	adc	r5, r1
     e52:	f8 01       	movw	r30, r16
     e54:	a0 80       	ld	r10, Z
     e56:	b1 80       	ldd	r11, Z+1	; 0x01
     e58:	36 fe       	sbrs	r3, 6
     e5a:	03 c0       	rjmp	.+6      	; 0xe62 <vfprintf+0x174>
     e5c:	69 2d       	mov	r22, r9
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	02 c0       	rjmp	.+4      	; 0xe66 <vfprintf+0x178>
     e62:	6f ef       	ldi	r22, 0xFF	; 255
     e64:	7f ef       	ldi	r23, 0xFF	; 255
     e66:	c5 01       	movw	r24, r10
     e68:	0e 94 58 08 	call	0x10b0	; 0x10b0 <strnlen_P>
     e6c:	4c 01       	movw	r8, r24
     e6e:	f3 2d       	mov	r31, r3
     e70:	f0 68       	ori	r31, 0x80	; 128
     e72:	3f 2e       	mov	r3, r31
     e74:	82 01       	movw	r16, r4
     e76:	33 fc       	sbrc	r3, 3
     e78:	1b c0       	rjmp	.+54     	; 0xeb0 <vfprintf+0x1c2>
     e7a:	82 2d       	mov	r24, r2
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	88 16       	cp	r8, r24
     e80:	99 06       	cpc	r9, r25
     e82:	b0 f4       	brcc	.+44     	; 0xeb0 <vfprintf+0x1c2>
     e84:	b6 01       	movw	r22, r12
     e86:	80 e2       	ldi	r24, 0x20	; 32
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
     e8e:	2a 94       	dec	r2
     e90:	f4 cf       	rjmp	.-24     	; 0xe7a <vfprintf+0x18c>
     e92:	f5 01       	movw	r30, r10
     e94:	37 fc       	sbrc	r3, 7
     e96:	85 91       	lpm	r24, Z+
     e98:	37 fe       	sbrs	r3, 7
     e9a:	81 91       	ld	r24, Z+
     e9c:	5f 01       	movw	r10, r30
     e9e:	b6 01       	movw	r22, r12
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
     ea6:	21 10       	cpse	r2, r1
     ea8:	2a 94       	dec	r2
     eaa:	21 e0       	ldi	r18, 0x01	; 1
     eac:	82 1a       	sub	r8, r18
     eae:	91 08       	sbc	r9, r1
     eb0:	81 14       	cp	r8, r1
     eb2:	91 04       	cpc	r9, r1
     eb4:	71 f7       	brne	.-36     	; 0xe92 <vfprintf+0x1a4>
     eb6:	e8 c0       	rjmp	.+464    	; 0x1088 <vfprintf+0x39a>
     eb8:	84 36       	cpi	r24, 0x64	; 100
     eba:	11 f0       	breq	.+4      	; 0xec0 <vfprintf+0x1d2>
     ebc:	89 36       	cpi	r24, 0x69	; 105
     ebe:	41 f5       	brne	.+80     	; 0xf10 <vfprintf+0x222>
     ec0:	f8 01       	movw	r30, r16
     ec2:	37 fe       	sbrs	r3, 7
     ec4:	07 c0       	rjmp	.+14     	; 0xed4 <vfprintf+0x1e6>
     ec6:	60 81       	ld	r22, Z
     ec8:	71 81       	ldd	r23, Z+1	; 0x01
     eca:	82 81       	ldd	r24, Z+2	; 0x02
     ecc:	93 81       	ldd	r25, Z+3	; 0x03
     ece:	0c 5f       	subi	r16, 0xFC	; 252
     ed0:	1f 4f       	sbci	r17, 0xFF	; 255
     ed2:	08 c0       	rjmp	.+16     	; 0xee4 <vfprintf+0x1f6>
     ed4:	60 81       	ld	r22, Z
     ed6:	71 81       	ldd	r23, Z+1	; 0x01
     ed8:	07 2e       	mov	r0, r23
     eda:	00 0c       	add	r0, r0
     edc:	88 0b       	sbc	r24, r24
     ede:	99 0b       	sbc	r25, r25
     ee0:	0e 5f       	subi	r16, 0xFE	; 254
     ee2:	1f 4f       	sbci	r17, 0xFF	; 255
     ee4:	f3 2d       	mov	r31, r3
     ee6:	ff 76       	andi	r31, 0x6F	; 111
     ee8:	3f 2e       	mov	r3, r31
     eea:	97 ff       	sbrs	r25, 7
     eec:	09 c0       	rjmp	.+18     	; 0xf00 <vfprintf+0x212>
     eee:	90 95       	com	r25
     ef0:	80 95       	com	r24
     ef2:	70 95       	com	r23
     ef4:	61 95       	neg	r22
     ef6:	7f 4f       	sbci	r23, 0xFF	; 255
     ef8:	8f 4f       	sbci	r24, 0xFF	; 255
     efa:	9f 4f       	sbci	r25, 0xFF	; 255
     efc:	f0 68       	ori	r31, 0x80	; 128
     efe:	3f 2e       	mov	r3, r31
     f00:	2a e0       	ldi	r18, 0x0A	; 10
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	a3 01       	movw	r20, r6
     f06:	0e 94 aa 08 	call	0x1154	; 0x1154 <__ultoa_invert>
     f0a:	88 2e       	mov	r8, r24
     f0c:	86 18       	sub	r8, r6
     f0e:	45 c0       	rjmp	.+138    	; 0xf9a <vfprintf+0x2ac>
     f10:	85 37       	cpi	r24, 0x75	; 117
     f12:	31 f4       	brne	.+12     	; 0xf20 <vfprintf+0x232>
     f14:	23 2d       	mov	r18, r3
     f16:	2f 7e       	andi	r18, 0xEF	; 239
     f18:	b2 2e       	mov	r11, r18
     f1a:	2a e0       	ldi	r18, 0x0A	; 10
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	25 c0       	rjmp	.+74     	; 0xf6a <vfprintf+0x27c>
     f20:	93 2d       	mov	r25, r3
     f22:	99 7f       	andi	r25, 0xF9	; 249
     f24:	b9 2e       	mov	r11, r25
     f26:	8f 36       	cpi	r24, 0x6F	; 111
     f28:	c1 f0       	breq	.+48     	; 0xf5a <vfprintf+0x26c>
     f2a:	18 f4       	brcc	.+6      	; 0xf32 <vfprintf+0x244>
     f2c:	88 35       	cpi	r24, 0x58	; 88
     f2e:	79 f0       	breq	.+30     	; 0xf4e <vfprintf+0x260>
     f30:	b5 c0       	rjmp	.+362    	; 0x109c <vfprintf+0x3ae>
     f32:	80 37       	cpi	r24, 0x70	; 112
     f34:	19 f0       	breq	.+6      	; 0xf3c <vfprintf+0x24e>
     f36:	88 37       	cpi	r24, 0x78	; 120
     f38:	21 f0       	breq	.+8      	; 0xf42 <vfprintf+0x254>
     f3a:	b0 c0       	rjmp	.+352    	; 0x109c <vfprintf+0x3ae>
     f3c:	e9 2f       	mov	r30, r25
     f3e:	e0 61       	ori	r30, 0x10	; 16
     f40:	be 2e       	mov	r11, r30
     f42:	b4 fe       	sbrs	r11, 4
     f44:	0d c0       	rjmp	.+26     	; 0xf60 <vfprintf+0x272>
     f46:	fb 2d       	mov	r31, r11
     f48:	f4 60       	ori	r31, 0x04	; 4
     f4a:	bf 2e       	mov	r11, r31
     f4c:	09 c0       	rjmp	.+18     	; 0xf60 <vfprintf+0x272>
     f4e:	34 fe       	sbrs	r3, 4
     f50:	0a c0       	rjmp	.+20     	; 0xf66 <vfprintf+0x278>
     f52:	29 2f       	mov	r18, r25
     f54:	26 60       	ori	r18, 0x06	; 6
     f56:	b2 2e       	mov	r11, r18
     f58:	06 c0       	rjmp	.+12     	; 0xf66 <vfprintf+0x278>
     f5a:	28 e0       	ldi	r18, 0x08	; 8
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	05 c0       	rjmp	.+10     	; 0xf6a <vfprintf+0x27c>
     f60:	20 e1       	ldi	r18, 0x10	; 16
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	02 c0       	rjmp	.+4      	; 0xf6a <vfprintf+0x27c>
     f66:	20 e1       	ldi	r18, 0x10	; 16
     f68:	32 e0       	ldi	r19, 0x02	; 2
     f6a:	f8 01       	movw	r30, r16
     f6c:	b7 fe       	sbrs	r11, 7
     f6e:	07 c0       	rjmp	.+14     	; 0xf7e <vfprintf+0x290>
     f70:	60 81       	ld	r22, Z
     f72:	71 81       	ldd	r23, Z+1	; 0x01
     f74:	82 81       	ldd	r24, Z+2	; 0x02
     f76:	93 81       	ldd	r25, Z+3	; 0x03
     f78:	0c 5f       	subi	r16, 0xFC	; 252
     f7a:	1f 4f       	sbci	r17, 0xFF	; 255
     f7c:	06 c0       	rjmp	.+12     	; 0xf8a <vfprintf+0x29c>
     f7e:	60 81       	ld	r22, Z
     f80:	71 81       	ldd	r23, Z+1	; 0x01
     f82:	80 e0       	ldi	r24, 0x00	; 0
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	0e 5f       	subi	r16, 0xFE	; 254
     f88:	1f 4f       	sbci	r17, 0xFF	; 255
     f8a:	a3 01       	movw	r20, r6
     f8c:	0e 94 aa 08 	call	0x1154	; 0x1154 <__ultoa_invert>
     f90:	88 2e       	mov	r8, r24
     f92:	86 18       	sub	r8, r6
     f94:	fb 2d       	mov	r31, r11
     f96:	ff 77       	andi	r31, 0x7F	; 127
     f98:	3f 2e       	mov	r3, r31
     f9a:	36 fe       	sbrs	r3, 6
     f9c:	0d c0       	rjmp	.+26     	; 0xfb8 <vfprintf+0x2ca>
     f9e:	23 2d       	mov	r18, r3
     fa0:	2e 7f       	andi	r18, 0xFE	; 254
     fa2:	a2 2e       	mov	r10, r18
     fa4:	89 14       	cp	r8, r9
     fa6:	58 f4       	brcc	.+22     	; 0xfbe <vfprintf+0x2d0>
     fa8:	34 fe       	sbrs	r3, 4
     faa:	0b c0       	rjmp	.+22     	; 0xfc2 <vfprintf+0x2d4>
     fac:	32 fc       	sbrc	r3, 2
     fae:	09 c0       	rjmp	.+18     	; 0xfc2 <vfprintf+0x2d4>
     fb0:	83 2d       	mov	r24, r3
     fb2:	8e 7e       	andi	r24, 0xEE	; 238
     fb4:	a8 2e       	mov	r10, r24
     fb6:	05 c0       	rjmp	.+10     	; 0xfc2 <vfprintf+0x2d4>
     fb8:	b8 2c       	mov	r11, r8
     fba:	a3 2c       	mov	r10, r3
     fbc:	03 c0       	rjmp	.+6      	; 0xfc4 <vfprintf+0x2d6>
     fbe:	b8 2c       	mov	r11, r8
     fc0:	01 c0       	rjmp	.+2      	; 0xfc4 <vfprintf+0x2d6>
     fc2:	b9 2c       	mov	r11, r9
     fc4:	a4 fe       	sbrs	r10, 4
     fc6:	0f c0       	rjmp	.+30     	; 0xfe6 <vfprintf+0x2f8>
     fc8:	fe 01       	movw	r30, r28
     fca:	e8 0d       	add	r30, r8
     fcc:	f1 1d       	adc	r31, r1
     fce:	80 81       	ld	r24, Z
     fd0:	80 33       	cpi	r24, 0x30	; 48
     fd2:	21 f4       	brne	.+8      	; 0xfdc <vfprintf+0x2ee>
     fd4:	9a 2d       	mov	r25, r10
     fd6:	99 7e       	andi	r25, 0xE9	; 233
     fd8:	a9 2e       	mov	r10, r25
     fda:	09 c0       	rjmp	.+18     	; 0xfee <vfprintf+0x300>
     fdc:	a2 fe       	sbrs	r10, 2
     fde:	06 c0       	rjmp	.+12     	; 0xfec <vfprintf+0x2fe>
     fe0:	b3 94       	inc	r11
     fe2:	b3 94       	inc	r11
     fe4:	04 c0       	rjmp	.+8      	; 0xfee <vfprintf+0x300>
     fe6:	8a 2d       	mov	r24, r10
     fe8:	86 78       	andi	r24, 0x86	; 134
     fea:	09 f0       	breq	.+2      	; 0xfee <vfprintf+0x300>
     fec:	b3 94       	inc	r11
     fee:	a3 fc       	sbrc	r10, 3
     ff0:	11 c0       	rjmp	.+34     	; 0x1014 <vfprintf+0x326>
     ff2:	a0 fe       	sbrs	r10, 0
     ff4:	06 c0       	rjmp	.+12     	; 0x1002 <vfprintf+0x314>
     ff6:	b2 14       	cp	r11, r2
     ff8:	88 f4       	brcc	.+34     	; 0x101c <vfprintf+0x32e>
     ffa:	28 0c       	add	r2, r8
     ffc:	92 2c       	mov	r9, r2
     ffe:	9b 18       	sub	r9, r11
    1000:	0e c0       	rjmp	.+28     	; 0x101e <vfprintf+0x330>
    1002:	b2 14       	cp	r11, r2
    1004:	60 f4       	brcc	.+24     	; 0x101e <vfprintf+0x330>
    1006:	b6 01       	movw	r22, r12
    1008:	80 e2       	ldi	r24, 0x20	; 32
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
    1010:	b3 94       	inc	r11
    1012:	f7 cf       	rjmp	.-18     	; 0x1002 <vfprintf+0x314>
    1014:	b2 14       	cp	r11, r2
    1016:	18 f4       	brcc	.+6      	; 0x101e <vfprintf+0x330>
    1018:	2b 18       	sub	r2, r11
    101a:	02 c0       	rjmp	.+4      	; 0x1020 <vfprintf+0x332>
    101c:	98 2c       	mov	r9, r8
    101e:	21 2c       	mov	r2, r1
    1020:	a4 fe       	sbrs	r10, 4
    1022:	10 c0       	rjmp	.+32     	; 0x1044 <vfprintf+0x356>
    1024:	b6 01       	movw	r22, r12
    1026:	80 e3       	ldi	r24, 0x30	; 48
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
    102e:	a2 fe       	sbrs	r10, 2
    1030:	17 c0       	rjmp	.+46     	; 0x1060 <vfprintf+0x372>
    1032:	a1 fc       	sbrc	r10, 1
    1034:	03 c0       	rjmp	.+6      	; 0x103c <vfprintf+0x34e>
    1036:	88 e7       	ldi	r24, 0x78	; 120
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <vfprintf+0x352>
    103c:	88 e5       	ldi	r24, 0x58	; 88
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	b6 01       	movw	r22, r12
    1042:	0c c0       	rjmp	.+24     	; 0x105c <vfprintf+0x36e>
    1044:	8a 2d       	mov	r24, r10
    1046:	86 78       	andi	r24, 0x86	; 134
    1048:	59 f0       	breq	.+22     	; 0x1060 <vfprintf+0x372>
    104a:	a1 fe       	sbrs	r10, 1
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <vfprintf+0x364>
    104e:	8b e2       	ldi	r24, 0x2B	; 43
    1050:	01 c0       	rjmp	.+2      	; 0x1054 <vfprintf+0x366>
    1052:	80 e2       	ldi	r24, 0x20	; 32
    1054:	a7 fc       	sbrc	r10, 7
    1056:	8d e2       	ldi	r24, 0x2D	; 45
    1058:	b6 01       	movw	r22, r12
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
    1060:	89 14       	cp	r8, r9
    1062:	38 f4       	brcc	.+14     	; 0x1072 <vfprintf+0x384>
    1064:	b6 01       	movw	r22, r12
    1066:	80 e3       	ldi	r24, 0x30	; 48
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
    106e:	9a 94       	dec	r9
    1070:	f7 cf       	rjmp	.-18     	; 0x1060 <vfprintf+0x372>
    1072:	8a 94       	dec	r8
    1074:	f3 01       	movw	r30, r6
    1076:	e8 0d       	add	r30, r8
    1078:	f1 1d       	adc	r31, r1
    107a:	80 81       	ld	r24, Z
    107c:	b6 01       	movw	r22, r12
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
    1084:	81 10       	cpse	r8, r1
    1086:	f5 cf       	rjmp	.-22     	; 0x1072 <vfprintf+0x384>
    1088:	22 20       	and	r2, r2
    108a:	09 f4       	brne	.+2      	; 0x108e <vfprintf+0x3a0>
    108c:	42 ce       	rjmp	.-892    	; 0xd12 <vfprintf+0x24>
    108e:	b6 01       	movw	r22, r12
    1090:	80 e2       	ldi	r24, 0x20	; 32
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	0e 94 6e 08 	call	0x10dc	; 0x10dc <fputc>
    1098:	2a 94       	dec	r2
    109a:	f6 cf       	rjmp	.-20     	; 0x1088 <vfprintf+0x39a>
    109c:	f6 01       	movw	r30, r12
    109e:	86 81       	ldd	r24, Z+6	; 0x06
    10a0:	97 81       	ldd	r25, Z+7	; 0x07
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <vfprintf+0x3ba>
    10a4:	8f ef       	ldi	r24, 0xFF	; 255
    10a6:	9f ef       	ldi	r25, 0xFF	; 255
    10a8:	2b 96       	adiw	r28, 0x0b	; 11
    10aa:	e2 e1       	ldi	r30, 0x12	; 18
    10ac:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__epilogue_restores__>

000010b0 <strnlen_P>:
    10b0:	fc 01       	movw	r30, r24
    10b2:	05 90       	lpm	r0, Z+
    10b4:	61 50       	subi	r22, 0x01	; 1
    10b6:	70 40       	sbci	r23, 0x00	; 0
    10b8:	01 10       	cpse	r0, r1
    10ba:	d8 f7       	brcc	.-10     	; 0x10b2 <strnlen_P+0x2>
    10bc:	80 95       	com	r24
    10be:	90 95       	com	r25
    10c0:	8e 0f       	add	r24, r30
    10c2:	9f 1f       	adc	r25, r31
    10c4:	08 95       	ret

000010c6 <strnlen>:
    10c6:	fc 01       	movw	r30, r24
    10c8:	61 50       	subi	r22, 0x01	; 1
    10ca:	70 40       	sbci	r23, 0x00	; 0
    10cc:	01 90       	ld	r0, Z+
    10ce:	01 10       	cpse	r0, r1
    10d0:	d8 f7       	brcc	.-10     	; 0x10c8 <strnlen+0x2>
    10d2:	80 95       	com	r24
    10d4:	90 95       	com	r25
    10d6:	8e 0f       	add	r24, r30
    10d8:	9f 1f       	adc	r25, r31
    10da:	08 95       	ret

000010dc <fputc>:
    10dc:	0f 93       	push	r16
    10de:	1f 93       	push	r17
    10e0:	cf 93       	push	r28
    10e2:	df 93       	push	r29
    10e4:	fb 01       	movw	r30, r22
    10e6:	23 81       	ldd	r18, Z+3	; 0x03
    10e8:	21 fd       	sbrc	r18, 1
    10ea:	03 c0       	rjmp	.+6      	; 0x10f2 <fputc+0x16>
    10ec:	8f ef       	ldi	r24, 0xFF	; 255
    10ee:	9f ef       	ldi	r25, 0xFF	; 255
    10f0:	2c c0       	rjmp	.+88     	; 0x114a <fputc+0x6e>
    10f2:	22 ff       	sbrs	r18, 2
    10f4:	16 c0       	rjmp	.+44     	; 0x1122 <fputc+0x46>
    10f6:	46 81       	ldd	r20, Z+6	; 0x06
    10f8:	57 81       	ldd	r21, Z+7	; 0x07
    10fa:	24 81       	ldd	r18, Z+4	; 0x04
    10fc:	35 81       	ldd	r19, Z+5	; 0x05
    10fe:	42 17       	cp	r20, r18
    1100:	53 07       	cpc	r21, r19
    1102:	44 f4       	brge	.+16     	; 0x1114 <fputc+0x38>
    1104:	a0 81       	ld	r26, Z
    1106:	b1 81       	ldd	r27, Z+1	; 0x01
    1108:	9d 01       	movw	r18, r26
    110a:	2f 5f       	subi	r18, 0xFF	; 255
    110c:	3f 4f       	sbci	r19, 0xFF	; 255
    110e:	31 83       	std	Z+1, r19	; 0x01
    1110:	20 83       	st	Z, r18
    1112:	8c 93       	st	X, r24
    1114:	26 81       	ldd	r18, Z+6	; 0x06
    1116:	37 81       	ldd	r19, Z+7	; 0x07
    1118:	2f 5f       	subi	r18, 0xFF	; 255
    111a:	3f 4f       	sbci	r19, 0xFF	; 255
    111c:	37 83       	std	Z+7, r19	; 0x07
    111e:	26 83       	std	Z+6, r18	; 0x06
    1120:	14 c0       	rjmp	.+40     	; 0x114a <fputc+0x6e>
    1122:	8b 01       	movw	r16, r22
    1124:	ec 01       	movw	r28, r24
    1126:	fb 01       	movw	r30, r22
    1128:	00 84       	ldd	r0, Z+8	; 0x08
    112a:	f1 85       	ldd	r31, Z+9	; 0x09
    112c:	e0 2d       	mov	r30, r0
    112e:	09 95       	icall
    1130:	89 2b       	or	r24, r25
    1132:	e1 f6       	brne	.-72     	; 0x10ec <fputc+0x10>
    1134:	d8 01       	movw	r26, r16
    1136:	16 96       	adiw	r26, 0x06	; 6
    1138:	8d 91       	ld	r24, X+
    113a:	9c 91       	ld	r25, X
    113c:	17 97       	sbiw	r26, 0x07	; 7
    113e:	01 96       	adiw	r24, 0x01	; 1
    1140:	17 96       	adiw	r26, 0x07	; 7
    1142:	9c 93       	st	X, r25
    1144:	8e 93       	st	-X, r24
    1146:	16 97       	sbiw	r26, 0x06	; 6
    1148:	ce 01       	movw	r24, r28
    114a:	df 91       	pop	r29
    114c:	cf 91       	pop	r28
    114e:	1f 91       	pop	r17
    1150:	0f 91       	pop	r16
    1152:	08 95       	ret

00001154 <__ultoa_invert>:
    1154:	fa 01       	movw	r30, r20
    1156:	aa 27       	eor	r26, r26
    1158:	28 30       	cpi	r18, 0x08	; 8
    115a:	51 f1       	breq	.+84     	; 0x11b0 <__ultoa_invert+0x5c>
    115c:	20 31       	cpi	r18, 0x10	; 16
    115e:	81 f1       	breq	.+96     	; 0x11c0 <__ultoa_invert+0x6c>
    1160:	e8 94       	clt
    1162:	6f 93       	push	r22
    1164:	6e 7f       	andi	r22, 0xFE	; 254
    1166:	6e 5f       	subi	r22, 0xFE	; 254
    1168:	7f 4f       	sbci	r23, 0xFF	; 255
    116a:	8f 4f       	sbci	r24, 0xFF	; 255
    116c:	9f 4f       	sbci	r25, 0xFF	; 255
    116e:	af 4f       	sbci	r26, 0xFF	; 255
    1170:	b1 e0       	ldi	r27, 0x01	; 1
    1172:	3e d0       	rcall	.+124    	; 0x11f0 <__ultoa_invert+0x9c>
    1174:	b4 e0       	ldi	r27, 0x04	; 4
    1176:	3c d0       	rcall	.+120    	; 0x11f0 <__ultoa_invert+0x9c>
    1178:	67 0f       	add	r22, r23
    117a:	78 1f       	adc	r23, r24
    117c:	89 1f       	adc	r24, r25
    117e:	9a 1f       	adc	r25, r26
    1180:	a1 1d       	adc	r26, r1
    1182:	68 0f       	add	r22, r24
    1184:	79 1f       	adc	r23, r25
    1186:	8a 1f       	adc	r24, r26
    1188:	91 1d       	adc	r25, r1
    118a:	a1 1d       	adc	r26, r1
    118c:	6a 0f       	add	r22, r26
    118e:	71 1d       	adc	r23, r1
    1190:	81 1d       	adc	r24, r1
    1192:	91 1d       	adc	r25, r1
    1194:	a1 1d       	adc	r26, r1
    1196:	20 d0       	rcall	.+64     	; 0x11d8 <__ultoa_invert+0x84>
    1198:	09 f4       	brne	.+2      	; 0x119c <__ultoa_invert+0x48>
    119a:	68 94       	set
    119c:	3f 91       	pop	r19
    119e:	2a e0       	ldi	r18, 0x0A	; 10
    11a0:	26 9f       	mul	r18, r22
    11a2:	11 24       	eor	r1, r1
    11a4:	30 19       	sub	r19, r0
    11a6:	30 5d       	subi	r19, 0xD0	; 208
    11a8:	31 93       	st	Z+, r19
    11aa:	de f6       	brtc	.-74     	; 0x1162 <__ultoa_invert+0xe>
    11ac:	cf 01       	movw	r24, r30
    11ae:	08 95       	ret
    11b0:	46 2f       	mov	r20, r22
    11b2:	47 70       	andi	r20, 0x07	; 7
    11b4:	40 5d       	subi	r20, 0xD0	; 208
    11b6:	41 93       	st	Z+, r20
    11b8:	b3 e0       	ldi	r27, 0x03	; 3
    11ba:	0f d0       	rcall	.+30     	; 0x11da <__ultoa_invert+0x86>
    11bc:	c9 f7       	brne	.-14     	; 0x11b0 <__ultoa_invert+0x5c>
    11be:	f6 cf       	rjmp	.-20     	; 0x11ac <__ultoa_invert+0x58>
    11c0:	46 2f       	mov	r20, r22
    11c2:	4f 70       	andi	r20, 0x0F	; 15
    11c4:	40 5d       	subi	r20, 0xD0	; 208
    11c6:	4a 33       	cpi	r20, 0x3A	; 58
    11c8:	18 f0       	brcs	.+6      	; 0x11d0 <__ultoa_invert+0x7c>
    11ca:	49 5d       	subi	r20, 0xD9	; 217
    11cc:	31 fd       	sbrc	r19, 1
    11ce:	40 52       	subi	r20, 0x20	; 32
    11d0:	41 93       	st	Z+, r20
    11d2:	02 d0       	rcall	.+4      	; 0x11d8 <__ultoa_invert+0x84>
    11d4:	a9 f7       	brne	.-22     	; 0x11c0 <__ultoa_invert+0x6c>
    11d6:	ea cf       	rjmp	.-44     	; 0x11ac <__ultoa_invert+0x58>
    11d8:	b4 e0       	ldi	r27, 0x04	; 4
    11da:	a6 95       	lsr	r26
    11dc:	97 95       	ror	r25
    11de:	87 95       	ror	r24
    11e0:	77 95       	ror	r23
    11e2:	67 95       	ror	r22
    11e4:	ba 95       	dec	r27
    11e6:	c9 f7       	brne	.-14     	; 0x11da <__ultoa_invert+0x86>
    11e8:	00 97       	sbiw	r24, 0x00	; 0
    11ea:	61 05       	cpc	r22, r1
    11ec:	71 05       	cpc	r23, r1
    11ee:	08 95       	ret
    11f0:	9b 01       	movw	r18, r22
    11f2:	ac 01       	movw	r20, r24
    11f4:	0a 2e       	mov	r0, r26
    11f6:	06 94       	lsr	r0
    11f8:	57 95       	ror	r21
    11fa:	47 95       	ror	r20
    11fc:	37 95       	ror	r19
    11fe:	27 95       	ror	r18
    1200:	ba 95       	dec	r27
    1202:	c9 f7       	brne	.-14     	; 0x11f6 <__ultoa_invert+0xa2>
    1204:	62 0f       	add	r22, r18
    1206:	73 1f       	adc	r23, r19
    1208:	84 1f       	adc	r24, r20
    120a:	95 1f       	adc	r25, r21
    120c:	a0 1d       	adc	r26, r0
    120e:	08 95       	ret

00001210 <__prologue_saves__>:
    1210:	2f 92       	push	r2
    1212:	3f 92       	push	r3
    1214:	4f 92       	push	r4
    1216:	5f 92       	push	r5
    1218:	6f 92       	push	r6
    121a:	7f 92       	push	r7
    121c:	8f 92       	push	r8
    121e:	9f 92       	push	r9
    1220:	af 92       	push	r10
    1222:	bf 92       	push	r11
    1224:	cf 92       	push	r12
    1226:	df 92       	push	r13
    1228:	ef 92       	push	r14
    122a:	ff 92       	push	r15
    122c:	0f 93       	push	r16
    122e:	1f 93       	push	r17
    1230:	cf 93       	push	r28
    1232:	df 93       	push	r29
    1234:	cd b7       	in	r28, 0x3d	; 61
    1236:	de b7       	in	r29, 0x3e	; 62
    1238:	ca 1b       	sub	r28, r26
    123a:	db 0b       	sbc	r29, r27
    123c:	0f b6       	in	r0, 0x3f	; 63
    123e:	f8 94       	cli
    1240:	de bf       	out	0x3e, r29	; 62
    1242:	0f be       	out	0x3f, r0	; 63
    1244:	cd bf       	out	0x3d, r28	; 61
    1246:	09 94       	ijmp

00001248 <__epilogue_restores__>:
    1248:	2a 88       	ldd	r2, Y+18	; 0x12
    124a:	39 88       	ldd	r3, Y+17	; 0x11
    124c:	48 88       	ldd	r4, Y+16	; 0x10
    124e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1250:	6e 84       	ldd	r6, Y+14	; 0x0e
    1252:	7d 84       	ldd	r7, Y+13	; 0x0d
    1254:	8c 84       	ldd	r8, Y+12	; 0x0c
    1256:	9b 84       	ldd	r9, Y+11	; 0x0b
    1258:	aa 84       	ldd	r10, Y+10	; 0x0a
    125a:	b9 84       	ldd	r11, Y+9	; 0x09
    125c:	c8 84       	ldd	r12, Y+8	; 0x08
    125e:	df 80       	ldd	r13, Y+7	; 0x07
    1260:	ee 80       	ldd	r14, Y+6	; 0x06
    1262:	fd 80       	ldd	r15, Y+5	; 0x05
    1264:	0c 81       	ldd	r16, Y+4	; 0x04
    1266:	1b 81       	ldd	r17, Y+3	; 0x03
    1268:	aa 81       	ldd	r26, Y+2	; 0x02
    126a:	b9 81       	ldd	r27, Y+1	; 0x01
    126c:	ce 0f       	add	r28, r30
    126e:	d1 1d       	adc	r29, r1
    1270:	0f b6       	in	r0, 0x3f	; 63
    1272:	f8 94       	cli
    1274:	de bf       	out	0x3e, r29	; 62
    1276:	0f be       	out	0x3f, r0	; 63
    1278:	cd bf       	out	0x3d, r28	; 61
    127a:	ed 01       	movw	r28, r26
    127c:	08 95       	ret

0000127e <_exit>:
    127e:	f8 94       	cli

00001280 <__stop_program>:
    1280:	ff cf       	rjmp	.-2      	; 0x1280 <__stop_program>
